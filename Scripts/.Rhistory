'Barnesiella_intestinihominis_62208',
'Eubacterium_rectale_56927',
'Faecalibacterium_prausnitzii_57453'
)
accessory_one_epoch_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_one_epoch_demography.txt'
)
accessory_two_epoch_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_two_epoch_demography.txt'
)
accessory_three_epoch_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_three_epoch_demography.txt'
)
accessory_one_epoch_likelihood = numeric(7)
accessory_one_epoch_AIC = numeric(7)
accessory_one_epoch_theta = numeric(7)
accessory_one_epoch_nanc = numeric(7)
accessory_two_epoch_likelihood = numeric(7)
accessory_two_epoch_AIC = numeric(7)
accessory_two_epoch_nu = numeric(7)
accessory_two_epoch_tau = numeric(7)
accessory_two_epoch_time = numeric(7)
accessory_two_epoch_theta = numeric(7)
accessory_two_epoch_nanc = numeric(7)
accessory_three_epoch_likelihood = numeric(7)
accessory_three_epoch_AIC = numeric(7)
accessory_three_epoch_nu_bottleneck = numeric(7)
accessory_three_epoch_nu_contemporary = numeric(7)
accessory_three_epoch_tau_bottleneck = numeric(7)
accessory_three_epoch_tau_contemporary = numeric(7)
accessory_three_epoch_time_total = numeric(7)
accessory_three_epoch_theta = numeric(7)
accessory_three_epoch_nanc = numeric(7)
for (i in 1:length(accessory_one_epoch_file_list)) {
accessory_one_epoch_likelihood[i] = return_demography_likelihood(accessory_one_epoch_file_list[i])
accessory_one_epoch_AIC[i] = AIC_from_demography(accessory_one_epoch_file_list[i])
accessory_one_epoch_theta[i] = theta_from_demography(accessory_one_epoch_file_list[i])
accessory_one_epoch_nanc[i] = nanc_from_demography(accessory_one_epoch_file_list[i])
accessory_two_epoch_likelihood[i] = return_demography_likelihood(accessory_two_epoch_file_list[i])
accessory_two_epoch_AIC[i] = AIC_from_demography(accessory_two_epoch_file_list[i])
accessory_two_epoch_nu[i] = return_demography_params(accessory_two_epoch_file_list[i])[1]
accessory_two_epoch_tau[i] = return_demography_params(accessory_two_epoch_file_list[i])[2]
accessory_two_epoch_time[i] = time_from_demography(accessory_two_epoch_file_list[i])
accessory_two_epoch_theta[i] = theta_from_demography(accessory_two_epoch_file_list[i])
accessory_two_epoch_nanc[i] = nanc_from_demography(accessory_two_epoch_file_list[i])
accessory_three_epoch_likelihood[i] = return_demography_likelihood(accessory_three_epoch_file_list[i])
accessory_three_epoch_AIC[i] = AIC_from_demography(accessory_three_epoch_file_list[i])
accessory_three_epoch_nu_bottleneck[i] = return_demography_params(accessory_three_epoch_file_list[i])[1]
accessory_three_epoch_nu_contemporary[i] = return_demography_params(accessory_three_epoch_file_list[i])[2]
accessory_three_epoch_tau_bottleneck[i] = return_demography_params(accessory_three_epoch_file_list[i])[3]
accessory_three_epoch_tau_contemporary[i] = return_demography_params(accessory_three_epoch_file_list[i])[4]
accessory_three_epoch_time_total[i] = time_from_demography(accessory_three_epoch_file_list[i])
accessory_three_epoch_theta[i] = theta_from_demography(accessory_three_epoch_file_list[i])
accessory_three_epoch_nanc[i] = nanc_from_demography(accessory_three_epoch_file_list[i])
}
table_s6 = data.frame(
species=accessory_phylogenetic_levels,
accessory_one_epoch_likelihood,
accessory_one_epoch_AIC,
accessory_one_epoch_theta,
accessory_one_epoch_nanc,
accessory_two_epoch_likelihood,
accessory_two_epoch_AIC,
accessory_two_epoch_nu,
accessory_two_epoch_tau,
accessory_two_epoch_time,
accessory_two_epoch_theta,
accessory_two_epoch_nanc,
accessory_three_epoch_likelihood,
accessory_three_epoch_AIC,
accessory_three_epoch_nu_bottleneck,
accessory_three_epoch_nu_contemporary,
accessory_three_epoch_tau_bottleneck,
accessory_three_epoch_tau_contemporary,
accessory_three_epoch_time_total,
accessory_three_epoch_theta,
accessory_three_epoch_nanc
)
names(table_s6) = c(
'Species',
'One epoch, log likelihood',
'One epoch, AIC',
'One epoch, theta',
'One epoch, Ancestral effective population size',
'Two epoch, log likelihood',
'Two epoch, AIC',
'Two epoch, nu',
'Two epoch, tau',
'Two epoch, time in years',
'Two epoch, theta',
'Two epoch, Ancestral effective population size',
'Three epoch, log likelihood',
'Three epoch, AIC',
'Three epoch, nu (bottleneck)',
'Three epoch, nu (contemporary)',
'Three epoch, tau (bottleneck)',
'Three epoch, tau (contemporary)',
'Three epoch, time in years',
'Three epoch, theta',
'Three epoch, Ancestral effective population size'
)
table_s6
write.csv(table_s6, '../Summary/Supplemental_Table_6.csv', row.names = F)
### Supplemental Table 7
accessory_DFE_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_inferred_DFE.txt'
)
accessory_dfe_nanc = numeric(7)
accessory_gamma_likelihood = numeric(7)
accessory_gamma_AIC = numeric(7)
accessory_gamma_alpha = numeric(7)
accessory_gamma_beta = numeric(7)
accessory_neugamma_likelihood = numeric(7)
accessory_neugamma_AIC = numeric(7)
accessory_neugamma_pneu = numeric(7)
accessory_neugamma_alpha = numeric(7)
accessory_neugamma_beta = numeric(7)
for (i in 1:length(accessory_DFE_file_list)) {
accessory_dfe_nanc[i] = nanc_from_demography(accessory_two_epoch_file_list[i])
accessory_gamma_likelihood[i] = return_DFE_likelihood(accessory_DFE_file_list[i])[1]
accessory_gamma_AIC[i] = 4 - 2 * accessory_gamma_likelihood[i]
accessory_gamma_alpha[i] = return_DFE_params(accessory_DFE_file_list[i])[1]
accessory_gamma_beta[i] = return_DFE_params(accessory_DFE_file_list[i])[2]
accessory_neugamma_likelihood[i] = return_DFE_likelihood(accessory_DFE_file_list[i])[2]
accessory_neugamma_AIC[i] = 6 - 2 * accessory_neugamma_likelihood[i]
accessory_neugamma_pneu[i] = return_DFE_params(accessory_DFE_file_list[i])[3]
accessory_neugamma_alpha[i] = return_DFE_params(accessory_DFE_file_list[i])[4]
accessory_neugamma_beta[i] = return_DFE_params(accessory_DFE_file_list[i])[5]
}
table_s7 = data.frame(
species=accessory_phylogenetic_levels,
accessory_dfe_nanc,
accessory_gamma_likelihood,
accessory_gamma_AIC,
accessory_gamma_alpha,
accessory_gamma_beta,
accessory_neugamma_likelihood,
accessory_neugamma_AIC,
accessory_neugamma_pneu,
accessory_neugamma_alpha,
accessory_neugamma_beta
)
names(table_s7) = c(
'Species',
'Ancestral effective population size',
'Gamma DFE, Log likelihood',
'Gamma DFE, AIC',
'Gamma DFE, Shape',
'Gamma DFE, Scale',
'Neu-Gamma DFE, Log likelihood',
'Neu-Gamma DFE, AIC',
'Neu-Gamma DFE, Proportion of Neutral Mutations',
'Neu-Gamma DFE, Shape',
'Neu-Gamma DFE, Scale'
)
table_s7
write.csv(table_s7, '../Summary/Supplemental_Table_7.csv', row.names = F)
### Supplemental Table 8
names(acc_core_dfe_LRT_table) = c(
'Species',
'LRT Statistic, 2N_Anc*s',
'LRT Statistic, s'
)
acc_core_dfe_LRT_table
write.csv(acc_core_dfe_LRT_table, '../Summary/Supplemental_Table_8.csv', row.names = F)
### Figure S7
all_genes_phylogenetic_levels = c(
'Bacteroidales bacterium',
'Alistipes finegoldii',
'Alistipes onderdonkii',
'Alistipes shahii',
'Odoribacter splanchnicus',
'Parabacteroides distasonis',
'Parabacteroides merdae',
'Prevotella copri',
'Bacteroides fragilis',
'Bacteroides cellulosilyticus',
'Bacteroides stercoris',
'Bacteroides thetaiotaomicron',
'Bacteroides xylanisolvens',
'Bacteroides vulgatus',
'Barnesiella intestinihominis',
'Akkermansia muciniphila',
'Phascolarctobacterium species',
'Eubacterium eligens',
'Eubacterium rectale',
'Oscillibacter species',
'Ruminococcus bromii',
'Ruminococcus bicirculans',
'Faecalibacterium prausnitzii'
)
temp_demography_df = demography_df
temp_demography_df
temp_demography_df$species = factor(demography_df$species, levels=all_genes_phylogenetic_levels)
temp_demography_df = na.omit(temp_demography_df)
temp_demography_df <- temp_demography_df[order(temp_demography_df$species), ]
row.names(temp_demography_df) = NULL
temp_demography_df
all_genes_two_epoch_nu_tau = read.csv('../Summary/all_genes_two_epoch_demography_interpretation.csv')
all_genes_three_epoch_nu_tau = read.csv('../Summary/all_genes_three_epoch_demography_interpretation.csv', nrows=1)
all_genes_two_epoch_nu_tau$demography = 'Two Epoch'
all_genes_three_epoch_nu_tau$demography = 'Three Epoch'
all_genes_three_epoch_nu_tau = all_genes_three_epoch_nu_tau[-c(2,4:7)]
colnames(all_genes_two_epoch_nu_tau) = c('species', 'nu_mle', 'time_mle', 'time_high', 'n_anc', 'demography')
colnames(all_genes_three_epoch_nu_tau) = c('species', 'nu_mle', 'time_mle', 'time_high', 'n_anc', 'demography')
all_genes_demography_df =  rbind(all_genes_two_epoch_nu_tau, all_genes_three_epoch_nu_tau)
all_genes_demography_df
all_genes_demography_df$species = factor(all_genes_demography_df$species, levels=all_genes_phylogenetic_levels)
all_genes_demography_df <- all_genes_demography_df[order(all_genes_demography_df$species), ]
row.names(all_genes_demography_df) = NULL
all_genes_demography_df
all_genes_species_highlight = c()
all_genes_typeface = ifelse(all_genes_demography_df$species %in% all_genes_species_highlight, 4, 3)
all_genes_demography_df_highlight = all_genes_demography_df[all_genes_demography_df$species %in% all_genes_species_highlight, ]
options(ggrepel.max.overlaps = Inf)
x_label_text = expression(nu == frac(N[current], N[ancestral]))
temp_demography_scatter = ggscatter(temp_demography_df, x="nu_mle", y="time_mle", color='species', size=3) +
ylab('Estimated time in years since most recent demographic event') +
xlab(x_label_text) +
geom_vline(xintercept=1.0, color='red', linewidth=1, linetype='dashed') +
scale_shape_manual(name = "Best-Fit Demographic Model",
labels = c("Three Epoch", "Two Epoch"),
values = c(17, 19)) +
geom_text_repel(aes(label = species, color=species, fontface = 'italic'), size=all_genes_typeface) +
guides(color=guide_legend(title="Species")) +
scale_x_log10(limits=c(1e-2, 2e5)) +
scale_y_log10(limits=c(2e2, 1e7)) +
theme(legend.position = 'none') +
guides(color = 'none') +
guides(shape = 'none')  +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16))
temp_demography_scatter
plot_build <- ggplot_build(temp_demography_scatter)
color_mapping <- plot_build$data[[1]]$colour
print(color_mapping)
# 800 x 750
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping, shape=18, size=3) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2,
color=color_mapping)
difference_plot
wilcox.test(temp_demography_df$nu_mle, all_genes_demography_df$nu_mle, paired=T)
### Figure S8
# 1200 x 2800
design = "
ABB
ACC
DEE
DFF
GHH
GII
JKK
JLL
MNN
MOO
PQQ
PRR
STT
SUU
"
core_accessory_comparison =
p25a + p25_core_dfe + p25_acc_dfe +
p14a + p14_core_dfe + p14_acc_dfe +
p13a + p13_core_dfe + p13_acc_dfe +
p15a + p15_core_dfe + p15_acc_dfe +
p17a + p17_core_dfe + p17_acc_dfe +
p21a + p21_core_dfe + p21_acc_dfe +
p22a + p22_core_dfe + p22_acc_dfe +
plot_layout(design=design)
core_accessory_comparison
### Figure 5
# 1000 x 800
design = "
ABB
ACC
DEE
DFF
"
# p <- ggplot( c, aes(x=c$a, fill=c$b) ) + geom_histogram( binwidth=0.2 ) +
fig_5A = compare_core_accessory_sfs_syn_ns_5A(b_thetaiotaomicron_core,
b_thetaiotaomicron_core_ns,
b_thetaiotaomicron_accessory,
b_thetaiotaomicron_accessory_ns) + ggtitle('B. thetaiotaomicron')
fig_5B = compare_core_accessory_sfs_syn_ns_5B(e_rectale_core,
e_rectale_core_ns,
e_rectale_accessory,
e_rectale_accessory_ns) + ggtitle('E. rectale')
fig_5A + p13_core_dfe + p13_acc_dfe +
fig_5B + p21_core_dfe + p21_acc_dfe +
plot_layout(design=design)
# Talk Version
# 600 x 800
p13_core_dfe_talk + p13_acc_dfe_talk + p21_core_dfe_talk + p21_acc_dfe_talk + plot_layout(ncol=1)
p25_core_dfe_talk + p25_acc_dfe_talk +
p14_core_dfe_talk + p14_acc_dfe_talk +
p13_core_dfe_talk + p13_acc_dfe_talk +
p15_core_dfe_talk + p15_acc_dfe_talk +
p17_core_dfe_talk + p17_acc_dfe_talk +
p21_core_dfe_talk + p21_acc_dfe_talk +
p22_core_dfe_talk + p22_acc_dfe_talk + plot_layout(ncol=2)
# 1400 x 600
p25_core_dfe_talk + p14_core_dfe_talk + p13_core_dfe_talk + p15_core_dfe_talk + p17_core_dfe_talk + p21_core_dfe_talk + p22_core_dfe_talk +
p25_acc_dfe_talk + p14_acc_dfe_talk + p13_acc_dfe_talk + p15_acc_dfe_talk + p17_acc_dfe_talk + p21_acc_dfe_talk + p22_acc_dfe_talk +
plot_layout(ncol=7)
### Figure S9
# B. vulgatus, no clade control
b_vulgatus_all_clades_syn = fold_sfs(read_input_sfs('../Analysis/Bacteroides_vulgatus_57955_no_clade_control/empirical_syn_sfs.txt'))
b_vulgatus_all_clades_nonsyn = fold_sfs(read_input_sfs('../Analysis/Bacteroides_vulgatus_57955_no_clade_control/empirical_nonsyn_sfs.txt'))
fig_s9_a = plot_empirical_sfs(b_vulgatus_all_clades_syn) +
ggtitle('*Bacteroides vulgatus*, synonymous') +
md_theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
fig_s9_b = plot_empirical_sfs(b_vulgatus_all_clades_nonsyn) +
ggtitle('*Bacteroides vulgatus*, nonsynonymous') +
md_theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# B. vulgatus, clade control
b_vulgatus_clade_control_syn = read_input_sfs('../Analysis/Bacteroides_vulgatus_57955/core_empirical_syn_sfs.txt')
b_vulgatus_clade_control_nonsyn = read_input_sfs('../Analysis/Bacteroides_vulgatus_57955/core_empirical_nonsyn_sfs.txt')
fig_s9_c = plot_empirical_sfs(b_vulgatus_clade_control_syn)
fig_s9_d = plot_empirical_sfs(b_vulgatus_clade_control_nonsyn)
# B. vulgatus, clade control + downsampling
b_vulgatus_clade_control_downsampled_syn = read_input_sfs('../Analysis/Bacteroides_vulgatus_57955_downsampled_14/core_empirical_syn_downsampled_sfs.txt')
b_vulgatus_clade_control_downsampled_nonsyn = read_input_sfs('../Analysis/Bacteroides_vulgatus_57955_downsampled_14/core_empirical_nonsyn_downsampled_sfs.txt')
fig_s9_e = plot_empirical_sfs(b_vulgatus_clade_control_downsampled_syn)
fig_s9_f = plot_empirical_sfs(b_vulgatus_clade_control_downsampled_nonsyn)
design = "
AB
CD
EF
"
# 2400 x 800
fig_s9 = plot_figure_s9(b_vulgatus_all_clades_syn,
b_vulgatus_clade_control_syn,
b_vulgatus_clade_control_downsampled_syn)
fig_s9
# fig_s9_a + fig_s9_b +
#   fig_s9_c + fig_s9_d +
#   fig_s9_e + fig_s9_f +
#   plot_layout(design=design)
fig_s9_a
fig_s9_c
fig_s9_e
### Is there a phylogenetic relationship for `nu`?
phylosig(subtree, nu_tau_distribution$`Nu, MLE`)
K<-phylosig(subtree,nu_tau_distribution$`Nu, MLE`,test=T)
lambda<-phylosig(subtree,nu_tau_distribution$`Nu, MLE`,method="lambda",test=T)
# There does not appear to be a phylogenetic trend in `nu`
### Current effective population size
N_anc = table_s3$`Two epoch, Ancestral effective population size`
N_curr_low = nu_tau_distribution$`Low estimate of Nu` * N_anc
N_curr_high = nu_tau_distribution$`High estimate of Nu` * N_anc
N_curr_MLE = nu_tau_distribution$`Nu, MLE` * N_anc
N_curr_data = data.frame(
species=phylogenetic_levels,
N_curr_MLE = N_curr_MLE,
N_curr_low = N_curr_low,
N_curr_high = N_curr_high
)
N_curr_label = expression(N[current])
N_curr_data$species = factor(N_curr_data$species, levels=phylogenetic_levels)
plot_N_curr_distribution = ggplot() +
geom_linerange(data=N_curr_data, mapping=aes(x=fct_rev(species), ymin=N_curr_low, ymax=N_curr_high, col=species), size=1, show.legend=FALSE) +
geom_point(data=N_curr_data, mapping=aes(x=fct_rev(species), y=N_curr_MLE, col=species), size=3, shape=18, show.legend=FALSE) +
scale_y_log10() +
coord_flip() +
theme_bw() +
xlab('') +
ylab(N_curr_label) +
theme(axis.text.y = element_text(face='italic')) +
theme(axis.text.y = element_text(hjust=0)) +
theme(axis.text=element_text(size=16)) +
theme(axis.title=element_text(size=16,face="bold"))
plot_N_curr_distribution
# N_curr for core genes vs. for all genes
N_curr_data$N_anc = N_anc
N_curr_data$species = factor(N_curr_data$species, levels=all_genes_phylogenetic_levels)
N_curr_data = na.omit(N_curr_data)
N_curr_data <- N_curr_data[order(N_curr_data$species), ]
row.names(N_curr_data) = NULL
core_all_N_curr = data.frame(species=all_genes_phylogenetic_levels,
core_N_curr=N_curr_data$N_curr_MLE,
core_time=temp_demography_df$time_mle,
all_N_curr=all_genes_demography_df$nu_mle * all_genes_demography_df$n_anc,
all_time=all_genes_demography_df$time_mle)
core_all_N_curr$species = factor(core_all_N_curr$species, levels=all_genes_phylogenetic_levels)
plot_core_all_N_curr_comparison = ggplot() +
# geom_linerange(data=core_all_N_curr, mapping=aes(x=fct_rev(species), ymin=core_N_curr, ymax=all_N_curr, col=species), size=1, show.legend=FALSE) +
scale_y_log10() +
coord_flip() +
theme_bw() +
xlab('') +
ylab(N_curr_label) +
theme(axis.text.y = element_text(face='italic')) +
theme(axis.text.y = element_text(hjust=0)) +
theme(axis.text=element_text(size=16)) +
theme(axis.title=element_text(size=16,face="bold")) +
geom_segment(data=core_all_N_curr, aes(x=fct_rev(species), y=core_N_curr, xend=fct_rev(species), yend=all_N_curr, col=species), arrow = arrow(length=unit(.5, 'cm')), show.legend=FALSE)
plot_core_all_N_curr_comparison
plot_core_all_time_comparison = ggplot() +
#geom_linerange(data=core_all_N_curr, mapping=aes(x=fct_rev(species), ymin=core_time, ymax=all_time, col=species), size=1, show.legend=FALSE) +
#geom_point(data=core_all_N_curr, mapping=aes(x=fct_rev(species), y=core_time), size=4, shape=21, fill="white") +
#geom_point(data=core_all_N_curr, mapping=aes(x=fct_rev(species), y=all_time), size=4, shape=21, fill="black") +
scale_y_log10() +
coord_flip() +
theme_bw() +
xlab('') +
ylab('Estimated time in years since most recent demographic event') +
theme(axis.text.y = element_text(face='italic')) +
theme(axis.text.y = element_text(hjust=0)) +
theme(axis.text=element_text(size=16)) +
theme(axis.title=element_text(size=16,face="bold")) +
geom_segment(data=core_all_N_curr, aes(x=fct_rev(species), y=core_time, xend=fct_rev(species), yend=all_time, col=species), arrow = arrow(length=unit(.5, 'cm')), show.legend=FALSE)
plot_core_all_time_comparison
### Delta AIC
table_s3$Species = factor(table_s3$Species, levels=phylogenetic_levels_MIDAS)
table_s3 = table_s3[order(table_s3$Species), ]
plot_AIC = ggplot() +
geom_jitter(data=table_s3, mapping=aes(x=Species, y=`Three epoch, AIC`), size=2, shape=21, fill="blue", width = 0.1) +
geom_jitter(data=table_s3, mapping=aes(x=Species, y=`Two epoch, AIC`), size=2, shape=21, fill="green", width = 0.1) +
geom_jitter(data=table_s3, mapping=aes(x=Species, y=`One epoch, AIC`), size=2, shape=21, fill="red", width = 0.1) +
scale_y_log10() +
# coord_flip() +
theme_bw() +
xlab('') +
ylab('Aikake Information Criteria') +
theme(axis.text.y = element_text(face='italic')) +
theme(axis.text.y = element_text(hjust=0)) +
theme(axis.text=element_text(size=16)) +
theme(axis.title=element_text(size=16,face="bold")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
plot_AIC
### Mean selection coefficient, N_curr, 2Ns
table_s5$Species = factor(table_s3$Species, levels=phylogenetic_levels_MIDAS)
table_s5 = table_s5[order(table_s5$Species), ]
mean_s = table_s5$`Gamma DFE, Shape` * table_s5$`Gamma DFE, Scale`
mean_2Ns = mean_s * 2 * N_anc
selection_vs_N_curr = data.frame(
species=phylogenetic_levels_MIDAS,
N_curr=N_curr,
mean_s=mean_s,
mean_2Ns=mean_2Ns
)
table_s5$Species = factor(table_s3$Species, levels=phylogenetic_levels_MIDAS)
table_s5 = table_s5[order(table_s5$Species), ]
mean_s = table_s5$`Gamma DFE, Shape` * table_s5$`Gamma DFE, Scale`
mean_2Ns = mean_s * 2 * N_anc
selection_vs_N_curr = data.frame(
species=phylogenetic_levels_MIDAS,
N_curr=N_curr_MLE,
mean_s=mean_s,
mean_2Ns=mean_2Ns
)
# Calculate the correlation coefficient
cor_mean_s_N_curr = cor(mean_s, N_curr)
cor_mean_s_mean_2Ns = cor(mean_s, mean_2Ns)
plot(mean_s, N_curr)
# Calculate the correlation coefficient
cor_mean_s_N_curr_MLE = cor(mean_s, N_curr_MLE)
cor_mean_2Ns_N_curr_MLE = cor(N_curr_MLE, mean_2Ns)
cor_mean_s_mean_2Ns = cor(mean_s, mean_2Ns)
plot(mean_s, N_curr_MLE)
abline(lm(N_curr_MLE ~ mean_s))
text(20, 2E10, paste("Correlation:", round(cor_mean_s_N_curr_MLE, 2)), pos = 3)
text(20, 1.5E10, paste("P-value:", round(cor.test(mean_s, N_curr_MLE)$p.value, 2)), pos = 3)
title('No correlation between N_curr_MLE and mean_s')
cor.test(mean_s, N_curr_MLE)
plot(mean_2Ns, N_curr_MLE)
abline(lm(N_curr_MLE ~ mean_2Ns))
text(1E8, 2E10, paste("Correlation:", round(cor_mean_2Ns_N_curr_MLE, 2)), pos = 3)
text(1E8, 1.5E10, paste("P-value:", round(cor.test(mean_2Ns, N_curr_MLE)$p.value, 2)), pos = 3)
title('No correlation between N_curr_MLE and mean_2Ns')
plot(mean_s, mean_2Ns)
abline(lm(mean_2Ns ~ mean_s))
text(60, 1.5E8, paste("Correlation:", round(cor_mean_s_mean_2Ns, 2)), pos=3)
text(60, 1E8, paste("P-value:", round(cor.test(mean_2Ns, mean_s)$p.value, 4), pos=3))
title('Correlation between mean_s and mean_2Ns')
plot(N_curr_MLE, mean_2Ns)
# Create a scatterplot with a line of best fit
plot(x, y, main = "Scatterplot of x and y", xlab = "x", ylab = "y")
abline(lm(y ~ x), col = "red")
