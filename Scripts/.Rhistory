scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.5) +
xlim(0, 100) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.2) +
xlim(0, 100) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
xlim(0, 1.5) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.005) +
xlim(0, 100) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.00005) +
xlim(0, 100) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.0000005) +
xlim(0, 100) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.0000000005) +
xlim(0, 100) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.0000000000005) +
xlim(0, 10) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
b_xylanisolvens_UHGG_count_sfs = c(265, 90410, 54750, 36211, 27840, 24125, 19913,
15132, 10876, 10754, 9430, 9737, 7231, 7163, 5925,
6578, 5693, 5594, 5258, 4865, 4263, 4243, 3755, 3373,
3451, 3120, 3502, 3193, 2619, 2808, 3418, 3308, 3469,
3209, 2672, 3068, 3429, 2593, 2443, 2230, 2156, 2063,
1939, 2272, 1975, 1728, 1788, 1999, 1973, 1790, 1720,
1989, 1524, 1430, 1529, 1485, 1224, 1251, 1102, 1306,
1153, 1081, 1160, 1064, 993, 973, 1359, 1119, 1234,
1117, 1125, 1253, 1000, 1385, 1044, 1101, 1168, 1455,
1018, 779, 782, 799, 928, 837, 973, 976, 1134, 1163,
808, 801, 788, 827, 840, 1015, 805, 919, 670, 761, 701,
649, 659, 675, 764, 829, 641, 821, 667, 658, 696, 742,
792, 716, 628, 648, 611, 619, 647, 594, 640, 688, 746,
715, 720, 713, 921, 864, 805, 1012, 921, 680, 606, 702,
602, 635, 907, 664, 582, 745, 677, 805, 561, 671, 534,
590, 508, 452, 547, 516, 503, 456, 436, 551, 501, 542, 546,
598, 529, 494, 595, 576, 508, 686, 508, 608, 618, 480, 448,
562, 442, 562, 419, 419, 533, 430, 429, 481, 495, 420, 383,
492, 437, 518, 394, 426, 450, 466, 578, 648, 651, 486, 431,
484, 381, 361, 402, 361, 378, 396, 308, 320, 302, 358, 311,
324, 329, 296, 392, 333, 340, 436, 347, 323, 388, 542, 414,
357, 345, 315, 281, 284, 427, 279, 261, 244, 336, 297, 343,
373, 282, 277, 302, 305, 306, 335, 281, 392, 277, 296, 295,
282, 262, 228, 264, 250, 283, 273, 314, 241, 278, 322, 316,
253, 246, 399, 470, 255, 243, 216, 252, 278, 230, 262, 278,
248, 259, 251, 275, 277, 244, 235, 248, 237, 240, 409, 284,
231, 247, 334, 265, 259, 256, 226, 207, 216, 342, 349, 297,
279, 270, 460, 317, 337, 331, 307, 232, 224, 227, 209, 220,
215, 259, 170, 178, 167, 172, 222, 188, 240, 234, 195, 201,
194, 230, 467, 259, 223, 196, 227, 259, 304, 292, 305, 238,
281, 302, 295, 391, 251, 302, 298, 283, 306, 230, 350, 276,
332, 309, 315, 325, 300, 274, 212, 227, 227, 212, 231, 266,
267, 205, 231, 265, 243, 238, 204, 287, 258, 206, 160, 181,
213, 134, 149, 172, 176, 149, 158, 138, 98, 94, 107, 102, 70,
116, 96, 83, 88, 84, 73, 58, 94, 90, 14, 4, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0)
b_xylanisolvens_UHGG_count_sfs = c(265, 90410, 54750, 36211, 27840, 24125, 19913,
15132, 10876, 10754, 9430, 9737, 7231, 7163, 5925,
6578, 5693, 5594, 5258, 4865, 4263, 4243, 3755, 3373,
3451, 3120, 3502, 3193, 2619, 2808, 3418, 3308, 3469,
3209, 2672, 3068, 3429, 2593, 2443, 2230, 2156, 2063,
1939, 2272, 1975, 1728, 1788, 1999, 1973, 1790, 1720,
1989, 1524, 1430, 1529, 1485, 1224, 1251, 1102, 1306,
1153, 1081, 1160, 1064, 993, 973, 1359, 1119, 1234,
1117, 1125, 1253, 1000, 1385, 1044, 1101, 1168, 1455,
1018, 779, 782, 799, 928, 837, 973, 976, 1134, 1163,
808, 801, 788, 827, 840, 1015, 805, 919, 670, 761, 701,
649, 659, 675, 764, 829, 641, 821, 667, 658, 696, 742,
792, 716, 628, 648, 611, 619, 647, 594, 640, 688, 746,
715, 720, 713, 921, 864, 805, 1012, 921, 680, 606, 702,
602, 635, 907, 664, 582, 745, 677, 805, 561, 671, 534,
590, 508, 452, 547, 516, 503, 456, 436, 551, 501, 542, 546,
598, 529, 494, 595, 576, 508, 686, 508, 608, 618, 480, 448,
562, 442, 562, 419, 419, 533, 430, 429, 481, 495, 420, 383,
492, 437, 518, 394, 426, 450, 466, 578, 648, 651, 486, 431,
484, 381, 361, 402, 361, 378, 396, 308, 320, 302, 358, 311,
324, 329, 296, 392, 333, 340, 436, 347, 323, 388, 542, 414,
357, 345, 315, 281, 284, 427, 279, 261, 244, 336, 297, 343,
373, 282, 277, 302, 305, 306, 335, 281, 392, 277, 296, 295,
282, 262, 228, 264, 250, 283, 273, 314, 241, 278, 322, 316,
253, 246, 399, 470, 255, 243, 216, 252, 278, 230, 262, 278,
248, 259, 251, 275, 277, 244, 235, 248, 237, 240, 409, 284,
231, 247, 334, 265, 259, 256, 226, 207, 216, 342, 349, 297,
279, 270, 460, 317, 337, 331, 307, 232, 224, 227, 209, 220,
215, 259, 170, 178, 167, 172, 222, 188, 240, 234, 195, 201,
194, 230, 467, 259, 223, 196, 227, 259, 304, 292, 305, 238,
281, 302, 295, 391, 251, 302, 298, 283, 306, 230, 350, 276,
332, 309, 315, 325, 300, 274, 212, 227, 227, 212, 231, 266,
267, 205, 231, 265, 243, 238, 204, 287, 258, 206, 160, 181,
213, 134, 149, 172, 176, 149, 158, 138, 98, 94, 107, 102, 70,
116, 96, 83, 88, 84, 73, 58, 94, 90, 14, 4, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0)
b_xylanisolvens_UHGG_x_axis = 1:length(b_xylanisolvens_UHGG_count_sfs)
b_xylanisolvens_UHGG_df = data.frame(b_xylanisolvens_UHGG_count_sfs,
b_xylanisolvens_UHGG_x_axis)
names(b_xylanisolvens_UHGG_df) = c('Observed', 'x_axis')
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
ylim(0, 300) +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
b_xylanisolvens_UHGG_count_sfs
p_b_xylanisolvens_UHGG_comparison <- ggplot(data = melt(b_xylanisolvens_UHGG_df, id='x_axis'),
aes(x=x_axis,
y=value)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
ylim(0, 300) +
xlim(0, 25) +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
b_xylanisolvens_UHGG_count_sfs
library(ggplot2)
library(ggrepel)
library(ggsignif)
# install.packages("ggpubr")
library(ggpubr)
library(dplyr)
library(fitdistrplus)
library(scales)
library(reshape2)
fold_sfs = function(input_sfs) {
input_length = length(input_sfs)
folded_length = length(input_sfs) / 2
if (input_length %% 2 == 1) {
folded_length = folded_length + 1
}
output_sfs = c()
for (i in 1:folded_length) {
if (input_sfs[i] == input_sfs[input_length - i + 1]) {
output_sfs[i] = input_sfs[i]
} else {
output_sfs[i] = input_sfs[i] + input_sfs[input_length - i + 1]
}
}
return(output_sfs)
}
proportional_sfs = function(input_sfs) {
return (input_sfs / sum(input_sfs))
}
read_input_sfs = function(input_file)  {
## Reads input SFS in Dadi Format
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[2]
output_sfs = as.numeric(unlist(strsplit(sfs_string, ' ')))
output_sfs = output_sfs[-1] ## Remove 0-tons
output_sfs = fold_sfs(output_sfs)
return(output_sfs)
}
read_input_sfs_original = function(input_file)  {
## Reads input SFS in Dadi Format
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[2]
output_sfs = as.numeric(unlist(strsplit(sfs_string, ' ')))
return(output_sfs)
}
sfs_from_demography = function(input_file) {
## Reads input SFS from output *demography.txt
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[7]
output_sfs = strsplit(sfs_string, '-- ')
output_sfs = unlist(output_sfs)[2]
output_sfs = unlist(strsplit(output_sfs, ' '))
output_sfs = output_sfs[-length(output_sfs)]
## output_sfs = output_sfs[-1]
output_sfs = as.numeric(output_sfs)
output_sfs = fold_sfs(output_sfs)
return(output_sfs)
}
plot_likelihood_surface = function(input) {
species_surface = read.csv(input, header=FALSE)
names(species_surface) = c('likelihood', 'nu', 'tau')
species_surface = species_surface[order(species_surface$likelihood, decreasing=TRUE), ]
print(head(species_surface, 1))
species_surface_quantile = quantile(species_surface$likelihood, 0.80)
species_surface_max_minus = max(species_surface$likelihood) - 10
species_surface_cutoff = max(c(species_surface_quantile, species_surface_max_minus))
species_surface[species_surface$likelihood < species_surface_cutoff, ]$likelihood = species_surface_cutoff
# species_surface_scatter = ggplot(data = species_surface) +
#   geom_tile(aes(x = nu, y = tau, fill = likelihood))
# stat_contour(aes(x = nu, y = tau, z = likelihood))
# scale_x_continuous(trans='log10') +
# scale_y_continuous(trans='log10')
species_surface_scatter = ggplot(data=species_surface, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Greys") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
geom_vline(xintercept=1.0, color='red') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
return(species_surface_scatter)
}
compare_sfs = function(empirical, one_epoch, two_epoch) {
x_axis = 1:length(empirical)
input_df = data.frame(empirical,
two_epoch,
one_epoch,
x_axis)
names(input_df) = c('Empirical',
'Two-epoch',
'One-epoch',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
## scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
return(p_input_comparison)
}
plot_original_empirical_sfs = function(input) {
x_axis = 0:(length(input)-1)
input_df = data.frame(input,
x_axis)
names(input_df) = c('Empirical',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(-0.5, length(x_axis) + 0.5)) +
ylab('Number of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
return(p_input_comparison)
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
b_fragilis_1 = read_input_sfs('../Data/UHGG_SFS/1__output_sfs.txt')
b_fragilis_1 = read_input_sfs('../Data/UHGG_SFS/1__output_sfs.txt')
b_fragilis_1 = read_input_sfs('../Data/UHGG_SFS/1__output_sfs.txt')
b_fragilis_2 = read_input_sfs('../Data/UHGG_SFS/2__output_sfs.txt')
b_fragilis_3 = read_input_sfs('../Data/UHGG_SFS/3__output_sfs.txt')
b_fragilis_4 = read_input_sfs('../Data/UHGG_SFS/4__output_sfs.txt')
b_fragilis_5 = read_input_sfs('../Data/UHGG_SFS/5__output_sfs.txt')
b_fragailis = b_fragilis_1 + b_fragilis_2 + b_fragilis_3 + b_fragilis_4 + b_fragilis_5
b_fragilis
b_fragilis_1 = read_input_sfs('../Data/UHGG_SFS/1__output_sfs.txt')
b_fragilis_2 = read_input_sfs('../Data/UHGG_SFS/2__output_sfs.txt')
b_fragilis_3 = read_input_sfs('../Data/UHGG_SFS/3__output_sfs.txt')
b_fragilis_4 = read_input_sfs('../Data/UHGG_SFS/4__output_sfs.txt')
b_fragilis_5 = read_input_sfs('../Data/UHGG_SFS/5__output_sfs.txt')
b_fragilis = b_fragilis_1 + b_fragilis_2 + b_fragilis_3 + b_fragilis_4 + b_fragilis_5
b_fragilis
plot_original_empirical_sfs(b_fragilis)
plot_original_empirical_sfs(b_fragilis) +xlim(0, 20)
plot_original_empirical_sfs(b_fragilis) + xlim(0, 30)
plot_original_empirical_sfs(b_fragilis) + xlim(0, 10)
plot_original_empirical_sfs(b_fragilis) + xlim(0, 10) + ggtitle('B. fragilis (no clade control)')
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 10) + ggtitle('B. fragilis (no clade control)')
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 10) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(b_fragilis) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(proportional_sfs(b_fragilis)) + ggtitle('B. fragilis synonymous SFS (no clade control)')
+ ylab('Proportion of Segregating Sites')
plot_original_empirical_sfs(proportional_sfs(b_fragilis)) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(proportional_sfs(b_fragilis)) + ggtitle('B. fragilis synonymous SFS (no clade control)') +
ylab('Proportion of Segregating Sites')
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(b_fragilis_1)
plot_original_empirical_sfs(b_fragilis_1) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (Contig 1)')
b_fragilis = b_fragilis_1 + b_fragilis_2 + b_fragilis_3 + b_fragilis_4 + b_fragilis_5
plot_original_empirical_sfs(b_fragilis_1) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (Contig 1)')
plot_original_empirical_sfs(b_fragilis_2) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (Contig 2)')
plot_original_empirical_sfs(b_fragilis_3) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (Contig 3)')
plot_original_empirical_sfs(b_fragilis_4) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (Contig 4)')
plot_original_empirical_sfs(b_fragilis_5) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (Contig 5)')
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
b_fragilis
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(proportional_sfs(b_fragilis)) + ggtitle('B. fragilis synonymous SFS (no clade control)') +
ylab('Proportion of Segregating Sites')
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 50) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(a_muciniphila_original_empirical) + ggtitle('A. muciniphila full empirical SFS (unfolded)')
## A. finegoldii
plot_likelihood_surface('../Analysis/qp_gut_10/a_finegoldii_10.csv')
a_finegoldii_10_empirical =  read_input_sfs(
'../Analysis/Alistipes_finegoldii_56071_downsampled_10/empirical_sfs.txt'
)
a_finegoldii_10_one_epoch = sfs_from_demography(
'../Analysis/Alistipes_finegoldii_56071_downsampled_10/one_epoch_demography.txt'
)
a_finegoldii_10_two_epoch = sfs_from_demography(
'../Analysis/Alistipes_finegoldii_56071_downsampled_10/two_epoch_demography.txt'
)
a_finegoldii_original_empirical = read_input_sfs_original(
'../Analysis/Alistipes_finegoldii_56071_downsampled_10/original_empirical_sfs.txt'
)
compare_sfs(a_finegoldii_10_empirical,
a_finegoldii_10_one_epoch,
a_finegoldii_10_two_epoch) +
ylab('Raw Count of Segregating Sites') +
ggtitle('A. finegoldii Downsampled to 10')
compare_sfs(proportional_sfs(a_finegoldii_10_empirical),
proportional_sfs(a_finegoldii_10_one_epoch),
proportional_sfs(a_finegoldii_10_two_epoch)) +
ggtitle('A. finegoldii Downsampled to 10')
## A. muciniphila
plot_likelihood_surface('../Analysis/qp_gut_10/a_muciniphila_10.csv')
a_muciniphila_10_empirical =  read_input_sfs(
'../Analysis/Akkermansia_muciniphila_55290_downsampled_10/empirical_sfs.txt'
)
a_muciniphila_10_one_epoch = sfs_from_demography(
'../Analysis/Akkermansia_muciniphila_55290_downsampled_10/one_epoch_demography.txt'
)
a_muciniphila_10_two_epoch = sfs_from_demography(
'../Analysis/Akkermansia_muciniphila_55290_downsampled_10/two_epoch_demography.txt'
)
a_muciniphila_original_empirical = read_input_sfs_original(
'../Analysis/Akkermansia_muciniphila_55290_downsampled_10/original_empirical_sfs.txt'
)
compare_sfs(a_muciniphila_10_empirical,
a_muciniphila_10_one_epoch,
a_muciniphila_10_two_epoch) +
ylab('Raw Count of Segregating Sites') +
ggtitle('A. muciniphila Downsampled to 10')
compare_sfs(proportional_sfs(a_muciniphila_10_empirical),
proportional_sfs(a_muciniphila_10_one_epoch),
proportional_sfs(a_muciniphila_10_two_epoch)) +
ggtitle('A. muciniphila Downsampled to 10')
## A. onderdonkii
plot_likelihood_surface('../Analysis/qp_gut_10/a_onderdonkii_10.csv')
a_onderdonkii_10_empirical =  read_input_sfs(
'../Analysis/Alistipes_onderdonkii_55464_downsampled_10/empirical_sfs.txt'
)
a_onderdonkii_10_one_epoch = sfs_from_demography(
'../Analysis/Alistipes_onderdonkii_55464_downsampled_10/one_epoch_demography.txt'
)
a_onderdonkii_10_two_epoch = sfs_from_demography(
'../Analysis/Alistipes_onderdonkii_55464_downsampled_10/two_epoch_demography.txt'
)
a_onderdonkii_original_empirical = read_input_sfs_original(
'../Analysis/Alistipes_onderdonkii_55464_downsampled_10/original_empirical_sfs.txt'
)
compare_sfs(a_onderdonkii_10_empirical,
a_onderdonkii_10_one_epoch,
a_onderdonkii_10_two_epoch) +
ylab('Raw Count of Segregating Sites') +
ggtitle('A. onderdonkii Downsampled to 10')
compare_sfs(proportional_sfs(a_onderdonkii_10_empirical),
proportional_sfs(a_onderdonkii_10_one_epoch),
proportional_sfs(a_onderdonkii_10_two_epoch)) +
ggtitle('A. onderdonkii Downsampled to 10')
## A. putredinis
plot_likelihood_surface('../Analysis/qp_gut_10/a_putredinis_10.csv')
a_putredinis_10_empirical =  read_input_sfs(
'../Analysis/Alistipes_putredinis_61533_downsampled_10/empirical_sfs.txt'
)
a_putredinis_10_one_epoch = sfs_from_demography(
'../Analysis/Alistipes_putredinis_61533_downsampled_10/one_epoch_demography.txt'
)
a_putredinis_10_two_epoch = sfs_from_demography(
'../Analysis/Alistipes_putredinis_61533_downsampled_10/two_epoch_demography.txt'
)
compare_sfs(a_putredinis_10_empirical,
a_putredinis_10_one_epoch,
a_putredinis_10_two_epoch) +
ylab('Raw Count of Segregating Sites') +
ggtitle('A. putredinis Downsampled to 10')
plot_original_empirical_sfs(a_muciniphila_original_empirical) + ggtitle('A. muciniphila full empirical SFS (unfolded)')
plot_original_empirical_sfs(fold_sfs(a_muciniphila_original_empirical)) + ggtitle('A. mucinaphila full empirical SFS (folded)')
a_muciniphila_garud_good_empirical = read_input_sfs_original('../Data/Akkermansia_muciniphila_55290_syn.sfs')
plot_original_empirical_sfs(fold_sfs(a_muciniphila_garud_good_empirical)) + ggtitle('A. muciniphila folded SFS (Garud/Good code base)')
b_fragilis_1 = read_original_input_sfs('../Data/UHGG_SFS/1__output_sfs.txt')
b_fragilis_1 = read_input_original_sfs('../Data/UHGG_SFS/1__output_sfs.txt')
b_fragilis_1 = read_input_sfs_original('../Data/UHGG_SFS/1__output_sfs.txt')
b_fragilis_2 = read_input_sfs_original('../Data/UHGG_SFS/2__output_sfs.txt')
b_fragilis_3 = read_input_sfs_original('../Data/UHGG_SFS/3__output_sfs.txt')
b_fragilis_4 = read_input_sfs_original('../Data/UHGG_SFS/4__output_sfs.txt')
b_fragilis_5 = read_input_sfs_original('../Data/UHGG_SFS/5__output_sfs.txt')
b_fragilis = b_fragilis_1 + b_fragilis_2 + b_fragilis_3 + b_fragilis_4 + b_fragilis_5
plot_original_empirical_sfs(b_fragilis) + xlim(-0.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
b_fragilis
plot_original_empirical_sfs(b_fragilis) + xlim(-1.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(b_fragilis) + xlim(-1.5, 50) + ggtitle('B. fragilis synonymous SFS (no clade control)')
plot_original_empirical_sfs(b_fragilis) + xlim(-1.5, 20) + ggtitle('B. fragilis synonymous SFS (no clade control)')
len(b_fragilis)
length(b_fragilis)
plot_original_empirical_sfs(proportional_sfs(b_fragilis)) + ggtitle('B. fragilis synonymous SFS (no clade control)') +
ylab('Proportion of Segregating Sites')
plot_original_empirical_sfs(a_muciniphila_original_empirical) + ggtitle('A. muciniphila full empirical SFS (unfolded)')
