scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_xylanisolvens_UHGG_x_axis, limits=c(1.5, length(b_xylanisolvens_UHGG_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_xylanisolvens_UHGG_comparison
b_xylanisolvens_UHGG_count_sfs
library(ggplot2)
library(ggrepel)
library(ggsignif)
# install.packages("ggpubr")
library(ggpubr)
library(dplyr)
library(fitdistrplus)
library(scales)
library(reshape2)
library(stringr)
fold_sfs = function(input_sfs) {
input_length = length(input_sfs)
folded_length = length(input_sfs) / 2
if (input_length %% 2 == 1) {
folded_length = folded_length + 1
}
output_sfs = c()
for (i in 1:folded_length) {
if (input_sfs[i] == input_sfs[input_length - i + 1]) {
output_sfs[i] = input_sfs[i]
} else {
output_sfs[i] = input_sfs[i] + input_sfs[input_length - i + 1]
}
}
return(output_sfs)
}
proportional_sfs = function(input_sfs) {
return (input_sfs / sum(input_sfs))
}
read_input_sfs = function(input_file)  {
## Reads input SFS in Dadi Format
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[2]
output_sfs = as.numeric(unlist(strsplit(sfs_string, ' ')))
output_sfs = output_sfs[-1] ## Remove 0-tons
output_sfs = fold_sfs(output_sfs)
return(output_sfs)
}
read_input_sfs_original = function(input_file)  {
## Reads input SFS in Dadi Format
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[2]
output_sfs = as.numeric(unlist(strsplit(sfs_string, ' ')))
return(output_sfs)
}
sfs_from_demography = function(input_file) {
## Reads input SFS from output *demography.txt
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[7]
output_sfs = strsplit(sfs_string, '-- ')
output_sfs = unlist(output_sfs)[2]
output_sfs = unlist(strsplit(output_sfs, ' '))
output_sfs = output_sfs[-length(output_sfs)]
## output_sfs = output_sfs[-1]
output_sfs = as.numeric(output_sfs)
output_sfs = fold_sfs(output_sfs)
return(output_sfs)
}
gamma_sfs_from_dfe = function(input_file) {
## Reads input SFS from output *demography.txt
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[7]
output_sfs = strsplit(sfs_string, '-- ')
output_sfs = unlist(output_sfs)[2]
output_sfs = unlist(strsplit(output_sfs, ' '))
# output_sfs = output_sfs[-length(output_sfs)]
## output_sfs = output_sfs[-1]
output_sfs = as.numeric(output_sfs)
return(output_sfs)
}
neugamma_sfs_from_dfe = function(input_file) {
## Reads input SFS from output *demography.txt
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[14]
output_sfs = strsplit(sfs_string, '-- ')
output_sfs = unlist(output_sfs)[2]
output_sfs = unlist(strsplit(output_sfs, ' '))
# output_sfs = output_sfs[-length(output_sfs)]
## output_sfs = output_sfs[-1]
output_sfs = as.numeric(output_sfs)
return(output_sfs)
}
empirical_sfs_from_dfe = function(input_file) {
## Reads input SFS from output *demography.txt
this_file = file(input_file)
on.exit(close(this_file))
sfs_string = readLines(this_file)[6]
output_sfs = strsplit(sfs_string, '-- ')
output_sfs = unlist(output_sfs)[2]
output_sfs = unlist(strsplit(output_sfs, ' '))
# output_sfs = output_sfs[-length(output_sfs)]
## output_sfs = output_sfs[-1]
output_sfs = as.numeric(output_sfs)
return(output_sfs)
}
plot_likelihood_surface = function(input) {
species_surface = read.csv(input, header=FALSE)
names(species_surface) = c('likelihood', 'nu', 'tau')
species_surface = species_surface[order(species_surface$likelihood, decreasing=TRUE), ]
print(head(species_surface, 1))
species_surface_quantile = quantile(species_surface$likelihood, 0.80)
species_surface_max_minus = max(species_surface$likelihood) - 10
species_surface_cutoff = max(c(species_surface_quantile, species_surface_max_minus))
species_surface[species_surface$likelihood < species_surface_cutoff, ]$likelihood = species_surface_cutoff
# species_surface_scatter = ggplot(data = species_surface) +
#   geom_tile(aes(x = nu, y = tau, fill = likelihood))
# stat_contour(aes(x = nu, y = tau, z = likelihood))
# scale_x_continuous(trans='log10') +
# scale_y_continuous(trans='log10')
species_surface_scatter = ggplot(data=species_surface, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Greys") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
geom_vline(xintercept=1.0, color='red') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
return(species_surface_scatter)
}
compare_sfs = function(empirical, one_epoch, two_epoch) {
x_axis = 1:length(empirical)
input_df = data.frame(empirical,
two_epoch,
one_epoch,
x_axis)
names(input_df) = c('Empirical',
'Two-epoch',
'One-epoch',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
## scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
return(p_input_comparison)
}
compare_isolate_sfs = function(HMP_QP, Isolate) {
x_axis = 1:length(HMP_QP)
input_df = data.frame(proportional_sfs(HMP_QP),
proportional_sfs(Isolate), x_axis)
names(input_df) = c('HMP QP',
'Isolate',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
return(p_input_comparison)
}
compare_sfs_cornejo_count = function(input_directory) {
empirical_syn_sfs_file = paste(input_directory, 'downsampled_syn_sfs.txt', sep='')
model_syn_sfs_file = paste(input_directory, 'two_epoch_demography.txt', sep='')
nonsyn_sfs_file = paste(input_directory, 'inferred_DFE.txt', sep='')
model_syn_sfs = sfs_from_demography(model_syn_sfs_file)
empirical_nonsyn_sfs = empirical_sfs_from_dfe(nonsyn_sfs_file)
model_nonsyn_sfs = gamma_sfs_from_dfe(nonsyn_sfs_file)
neugamma_nonsyn_sfs = neugamma_sfs_from_dfe(nonsyn_sfs_file)
x_axis = 1:length(empirical_nonsyn_sfs)
input_df = data.frame(empirical_nonsyn_sfs,
model_syn_sfs,
model_nonsyn_sfs,
neugamma_nonsyn_sfs,
x_axis)
names(input_df) = c('Empirical nonsynonymous',
'Two-epoch Demography',
'Gamma-distributed DFE',
'Neu-gamma-distributed DFE',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
## scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
return(p_input_comparison)
}
compare_sfs_cornejo_proportional = function(input_directory) {
empirical_syn_sfs_file = paste(input_directory, 'downsampled_syn_sfs.txt', sep='')
model_syn_sfs_file = paste(input_directory, 'two_epoch_demography.txt', sep='')
nonsyn_sfs_file = paste(input_directory, 'inferred_DFE.txt', sep='')
model_syn_sfs = proportional_sfs(sfs_from_demography(model_syn_sfs_file))
empirical_nonsyn_sfs = proportional_sfs(empirical_sfs_from_dfe(nonsyn_sfs_file))
model_nonsyn_sfs = proportional_sfs(gamma_sfs_from_dfe(nonsyn_sfs_file))
neugamma_nonsyn_sfs = proportional_sfs(neugamma_sfs_from_dfe(nonsyn_sfs_file))
x_axis = 1:length(empirical_nonsyn_sfs)
input_df = data.frame(empirical_nonsyn_sfs,
model_syn_sfs,
model_nonsyn_sfs,
neugamma_nonsyn_sfs,
x_axis)
names(input_df) = c('Empirical nonsynonymous',
'Two-epoch Demography',
'Gamma-distributed DFE',
'Neu-gamma-distributed DFE',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
## scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
return(p_input_comparison)
}
compare_sfs_with_selection_count = function(input_directory) {
empirical_syn_sfs_file = paste(input_directory, 'downsampled_syn_sfs.txt', sep='')
model_syn_sfs_file = paste(input_directory, 'two_epoch_demography.txt', sep='')
nonsyn_sfs_file = paste(input_directory, 'inferred_DFE.txt', sep='')
empirical_syn_sfs = read_input_sfs(empirical_syn_sfs_file)
model_syn_sfs = sfs_from_demography(model_syn_sfs_file)
empirical_nonsyn_sfs = empirical_sfs_from_dfe(nonsyn_sfs_file)
model_nonsyn_sfs = gamma_sfs_from_dfe(nonsyn_sfs_file)
x_axis = 1:length(empirical_syn_sfs)
input_df = data.frame(empirical_syn_sfs,
model_syn_sfs,
empirical_nonsyn_sfs,
model_nonsyn_sfs,
x_axis)
names(input_df) = c('Empirical synonymous',
'Two-epoch Demography',
'Empirical nonsynonymous',
'Gamma-distributed DFE',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
## scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
return(p_input_comparison)
}
compare_sfs_with_selection_proportional = function(input_directory) {
empirical_syn_sfs_file = paste(input_directory, 'downsampled_syn_sfs.txt', sep='')
model_syn_sfs_file = paste(input_directory, 'two_epoch_demography.txt', sep='')
nonsyn_sfs_file = paste(input_directory, 'inferred_DFE.txt', sep='')
empirical_syn_sfs = proportional_sfs(read_input_sfs(empirical_syn_sfs_file))
model_syn_sfs = proportional_sfs(sfs_from_demography(model_syn_sfs_file))
empirical_nonsyn_sfs = proportional_sfs(empirical_sfs_from_dfe(nonsyn_sfs_file))
model_nonsyn_sfs = proportional_sfs(gamma_sfs_from_dfe(nonsyn_sfs_file))
x_axis = 1:length(empirical_syn_sfs)
input_df = data.frame(empirical_syn_sfs,
model_syn_sfs,
empirical_nonsyn_sfs,
model_nonsyn_sfs,
x_axis)
names(input_df) = c('Empirical synonymous',
'Two-epoch Demography',
'Empirical nonsynonymous',
'Gamma-distributed DFE',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Count of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
## scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
return(p_input_comparison)
}
plot_original_empirical_sfs = function(input) {
x_axis = 0:(length(input)-1)
input_df = data.frame(input,
x_axis)
names(input_df) = c('Empirical',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(-0.5, length(x_axis) + 0.5)) +
ylab('Number of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
return(p_input_comparison)
}
plot_dfe = function(input_dfe_file) {
## Reads input DFE from output *inferred_DFE.txt
this_file = file(input_dfe_file) # Open file
on.exit(close(this_file)) # Close when done
# Parse file and string manipulation
param_string_high = readLines(this_file)[4]
param_string_high = strsplit(param_string_high, split=': ')
param_string_high = unlist(param_string_high)[2]
param_string_high = str_sub(param_string_high, 2, -3)
param_string_high = unlist(strsplit(param_string_high, ' '))
param_string_high = as.numeric(param_string_high)
gamma_shape = param_string_high[1]
gamma_scale_high = param_string_high[2]
param_string_low = readLines(this_file)[5]
param_string_low = strsplit(param_string_low, split=': ')
param_string_low = unlist(param_string_low)[2]
param_string_low = str_sub(param_string_low, 2, -3)
param_string_low = unlist(strsplit(param_string_low, ' '))
param_string_low = as.numeric(param_string_low)
gamma_scale_low = param_string_low[2]
gamma_dfe_dist_high = rgamma(10000, shape=gamma_shape, scale=gamma_scale_high)
gamma_dfe_dist_low = rgamma(10000, shape=gamma_shape, scale=gamma_scale_low)
param_string_high = readLines(this_file)[11]
param_string_high = strsplit(param_string_high, split=': ')
param_string_high = unlist(param_string_high)[2]
param_string_high = str_sub(param_string_high, 2, -3)
param_string_high = unlist(strsplit(param_string_high, ' '))
param_string_high = as.numeric(param_string_high)
neugamma_proportion = param_string_high[1]
neugamma_shape = param_string_high[2]
neugamma_scale_high = param_string_high[3]
param_string_low = readLines(this_file)[12]
param_string_low = strsplit(param_string_low, split=': ')
param_string_low = unlist(param_string_low)[2]
param_string_low = str_sub(param_string_low, 2, -3)
param_string_low = unlist(strsplit(param_string_low, ' '))
param_string_low = as.numeric(param_string_low)
neugamma_scale_low = param_string_low[3]
neugamma_dfe_dist_high = rgamma(10000, shape=neugamma_shape, scale=neugamma_scale_high)
neugamma_dfe_dist_low = rgamma(10000, shape=neugamma_shape, scale=neugamma_scale_low)
zeroed_sites = as.integer(10000 * neugamma_proportion)
neugamma_dfe_dist_high[1:zeroed_sites] = 1e-06* 1.1
neugamma_dfe_dist_low[1:zeroed_sites] = 1e-06 * 1.1
dfe_df = data.frame(gamma_dfe_dist_high,
gamma_dfe_dist_low,
neugamma_dfe_dist_high,
neugamma_dfe_dist_low)
dfe_df[dfe_df < 1e-6] = 1e-6
names(dfe_df) = c('Gamma, mu=6.93E-10', 'Gamma, mu=4.08E-10',
'Neugamma, mu=6.93E-10', 'Neugamma, mu=4.08E-10')
ggplot(melt(dfe_df), aes(x=value, y=..density.., fill=variable)) +
geom_histogram(position='dodge',
breaks=c(0.000001, 0.00001,  0.0001, 0.001, 0.01)) +
scale_x_log10() +
ylab('Proportion of sites') +
xlab('Selective Effect') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
guides(fill=guide_legend(title="Estimated mutation rate"))
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
b_fragilis_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Bacteroides_fragilis_54507_downsampled_14/downsampled_syn_sfs.txt'
))
b_fragilis_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Bacteroides_fragilis/downsampled_sfs.txt'
))
compare_isolate_sfs(b_fragilis_14_hmp,
b_fragilis_14_isolate) +
ggtitle('B. fragilis downsampled SFS comparison')
b_stercoris_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Bacteroides_stercoris_56735_downsampled_14/downsampled_syn_sfs.txt'
))
b_stercoris_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Bacteroides_stercoris/downsampled_sfs.txt'
))
compare_isolate_sfs(b_stercoris_14_hmp,
b_stercoris_14_isolate) +
ggtitle('B. stercoris Downsampled SFS comparison')
f_prausnitzii_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/downsampled_syn_sfs.txt'
))
f_prausnitzii_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Faecalibacterium_prausnitzii_K/downsampled_sfs.txt'
))
compare_isolate_sfs(f_prausnitzii_14_hmp,
f_prausnitzii_14_isolate) +
ggtitle('F. prausnitzii Downsampled SFS Comparison')
p_copri_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Prevotella_copri_61740_downsampled_14/downsampled_syn_sfs.txt'
))
p_copri_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Prevotella_copri/downsampled_sfs.txt'
))
compare_isolate_sfs(p_copri_14_hmp,
p_copri_14_isolate) +
ggtitle('P. copri Downsampled SFS Comparison')
compare_isolate_sfs = function(HMP_QP, Isolate) {
x_axis = 1:length(HMP_QP)
input_df = data.frame(proportional_sfs(HMP_QP),
proportional_sfs(Isolate), x_axis)
names(input_df) = c('HMP QP',
'Isolate',
'x_axis')
p_input_comparison <- ggplot(data = melt(input_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=x_axis, limits=c(0.5, length(x_axis) + 0.5)) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 1.0)
return(p_input_comparison)
}
b_fragilis_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Bacteroides_fragilis_54507_downsampled_14/downsampled_syn_sfs.txt'
))
b_fragilis_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Bacteroides_fragilis/downsampled_sfs.txt'
))
compare_isolate_sfs(b_fragilis_14_hmp,
b_fragilis_14_isolate) +
ggtitle('B. fragilis downsampled SFS comparison')
b_stercoris_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Bacteroides_stercoris_56735_downsampled_14/downsampled_syn_sfs.txt'
))
b_stercoris_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Bacteroides_stercoris/downsampled_sfs.txt'
))
compare_isolate_sfs(b_stercoris_14_hmp,
b_stercoris_14_isolate) +
ggtitle('B. stercoris Downsampled SFS comparison')
f_prausnitzii_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/downsampled_syn_sfs.txt'
))
f_prausnitzii_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Faecalibacterium_prausnitzii_K/downsampled_sfs.txt'
))
compare_isolate_sfs(f_prausnitzii_14_hmp,
f_prausnitzii_14_isolate) +
ggtitle('F. prausnitzii Downsampled SFS Comparison')
p_copri_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Prevotella_copri_61740_downsampled_14/downsampled_syn_sfs.txt'
))
p_copri_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Prevotella_copri/downsampled_sfs.txt'
))
compare_isolate_sfs(p_copri_14_hmp,
p_copri_14_isolate) +
ggtitle('P. copri Downsampled SFS Comparison')
compare_isolate_sfs(b_fragilis_14_hmp[-1],
b_fragilis_14_isolate[-1]) +
ggtitle('B. fragilis downsampled SFS comparison')
b_fragilis_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Bacteroides_fragilis_54507_downsampled_14/downsampled_syn_sfs.txt'
))
b_fragilis_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Bacteroides_fragilis/downsampled_sfs.txt'
))
compare_isolate_sfs(b_fragilis_14_hmp[-1],
b_fragilis_14_isolate[-1]) +
ggtitle('B. fragilis downsampled SFS comparison')
b_stercoris_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Bacteroides_stercoris_56735_downsampled_14/downsampled_syn_sfs.txt'
))
b_stercoris_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Bacteroides_stercoris/downsampled_sfs.txt'
))
compare_isolate_sfs(b_stercoris_14_hmp[-1],
b_stercoris_14_isolate[-1]) +
ggtitle('B. stercoris Downsampled SFS comparison')
f_prausnitzii_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/downsampled_syn_sfs.txt'
))
f_prausnitzii_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Faecalibacterium_prausnitzii_K/downsampled_sfs.txt'
))
compare_isolate_sfs(f_prausnitzii_14_hmp[-1],
f_prausnitzii_14_isolate[-1]) +
ggtitle('F. prausnitzii Downsampled SFS Comparison')
p_copri_14_hmp = fold_sfs(read_input_sfs_original(
'../Analysis/Prevotella_copri_61740_downsampled_14/downsampled_syn_sfs.txt'
))
p_copri_14_isolate = fold_sfs(read_input_sfs_original(
'../Data/UHGG/UHGG_Prevotella_copri/downsampled_sfs.txt'
))
compare_isolate_sfs(p_copri_14_hmp[-1],
p_copri_14_isolate[-1]) +
ggtitle('P. copri Downsampled SFS Comparison')
