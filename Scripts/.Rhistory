dfe_comparison_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_matrix.csv', header=TRUE)
dfe_comparison_matrix = dfe_comparison_matrix[, -1]
rownames(dfe_comparison_matrix) = phylogenetic_levels
colnames(dfe_comparison_matrix) = phylogenetic_levels
dfe_comparison_matrix
dfe_constant_s_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv', header=TRUE)
dfe_constant_s_matrix = dfe_constant_s_matrix[, -1]
rownames(dfe_constant_s_matrix) = phylogenetic_levels
colnames(dfe_constant_s_matrix) = phylogenetic_levels
dfe_constant_s_matrix
qchisq(1 - 0.05/351, df=2)
dfe_comparison_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_matrix.csv', header=TRUE)
dfe_comparison_matrix = dfe_comparison_matrix[, -1]
rownames(dfe_comparison_matrix) = phylogenetic_levels
colnames(dfe_comparison_matrix) = phylogenetic_levels
dfe_comparison_matrix
sum(dfe_comparison_matrix < -17.71234) / 2
Heatmap(dfe_constant_s_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_constant_s_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = 'white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
dfe_comparison_significant = numeric(27)
dfe_constant_s_significant = numeric(27)
dfe_comparison_significant_within = numeric(27)
dfe_constant_s_significant_within = numeric(27)
for (i in 1:27) {
for (j in 1:i) {
genus_i = strsplit(phylogenetic_levels[i], ' ')[[1]][1]
genus_j = strsplit(phylogenetic_levels[j], ' ')[[1]][1]
if (genus_i !=  genus_j){
if (dfe_comparison_matrix[i, j] < -17.7) {
dfe_comparison_significant[i] = dfe_comparison_significant[i] + 1
dfe_comparison_significant[j] = dfe_comparison_significant[j] + 1
}
if (dfe_constant_s_matrix[i, j] < -17.7) {
dfe_constant_s_significant[i] = dfe_constant_s_significant[i] + 1
dfe_constant_s_significant[j] = dfe_constant_s_significant[j] + 1
}
}
if (genus_i == genus_j){
if (dfe_comparison_matrix[i, j] < -17.7) {
dfe_comparison_significant_within[i] = dfe_comparison_significant_within[i] + 1
dfe_comparison_significant_within[j] = dfe_comparison_significant_within[j] + 1
}
if (dfe_constant_s_matrix[i, j] < -17.7) {
dfe_constant_s_significant_within[i] = dfe_constant_s_significant_within[i] + 1
dfe_constant_s_significant_within[j] = dfe_constant_s_significant_within[j] + 1
}
}
}
}
dfe_comparison_table = data.frame(species=phylogenetic_levels,
dfe_comparison_between=dfe_comparison_significant,
dfe_comparison_within=dfe_comparison_significant_within,
dfe_constant_s_between=dfe_constant_s_significant,
dfe_constant_s_within=dfe_constant_s_significant_within)
names(dfe_comparison_table) = c(
'Species',
'num_sig outside genera, s',
'num_sig within genera, s',
'num_sig outside genera, 2Na*s',
'num_sig within genera, 2Na*s'
)
# 156 significant comparisons when holding s constant
sum(dfe_comparison_table[2:3]) / 2
# 206 significant comparisons when holding s constant
sum(dfe_comparison_table[2:3]) / 2
# 67 significant comparisons when holding 2Nas constant
sum(dfe_comparison_table[4:5])/ 2
# 131 significant comparisons when holding 2Nas constant
sum(dfe_comparison_table[4:5])/ 2
sum(dfe_comparison_table$`num_sig outside genera, s`) / 2
sum(dfe_comparison_table$`num_sig within genera, s`) / 2
sum(dfe_comparison_table$`num_sig outside genera, 2Na*s`) / 2
sum(dfe_comparison_table$`num_sig within genera, 2Na*s`) / 2
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, 2Na*s`)
write.csv(dfe_comparison_table, '../Summary/DFE_comparison_summary.csv', row.names=FALSE)
dfe_comparison_table
Heatmap(dfe_comparison_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_comparison_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 10, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 10))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
Heatmap(dfe_constant_s_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_constant_s_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = 'white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
Heatmap(dfe_constant_s_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_constant_s_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = 'white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
Heatmap(dfe_comparison_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_comparison_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 10, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 10))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
Heatmap(dfe_constant_s_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_constant_s_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = 'white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_constant_s_matrix[i, j]), x, y, gp = gpar(fontsize = 10))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
Heatmap(dfe_comparison_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_comparison_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 9, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 9))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
Heatmap(dfe_comparison_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_comparison_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 8, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 8))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
### Supplemental Table 7
accessory_DFE_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_inferred_DFE.txt'
)
accessory_gamma_likelihood = numeric(7)
accessory_gamma_AIC = numeric(7)
accessory_gamma_alpha = numeric(7)
accessory_gamma_beta = numeric(7)
accessory_neugamma_likelihood = numeric(7)
accessory_neugamma_AIC = numeric(7)
accessory_neugamma_pneu = numeric(7)
accessory_neugamma_alpha = numeric(7)
accessory_neugamma_beta = numeric(7)
DFE_core_file_list = c(
'../Analysis/cross_species_dfe/Parabacteroides_distasonis_56985_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Bacteroides_uniformis_57318_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Bacteroides_thetaiotaomicron_56941_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Bacteroides_vulgatus_57955_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Barnesiella_intestinihominis_62208_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Eubacterium_rectale_56927_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Faecalibacterium_prausnitzii_57453_likelihood_surface.csv'
)
DFE_core_file_list_constant_s = c(
'../Analysis/cross_species_dfe/Parabacteroides_distasonis_56985_constant_s_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Bacteroides_uniformis_57318_constant_s_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Bacteroides_thetaiotaomicron_56941_constant_s_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Bacteroides_vulgatus_57955_constant_s_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Barnesiella_intestinihominis_62208_constant_s_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Eubacterium_rectale_56927_constant_s_likelihood_surface.csv',
'../Analysis/cross_species_dfe/Faecalibacterium_prausnitzii_57453_constant_s_likelihood_surface.csv'
)
DFE_acc_file_list = c(
'../Analysis/accessory_cross_species_dfe/Parabacteroides_distasonis_56985_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Bacteroides_uniformis_57318_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Bacteroides_thetaiotaomicron_56941_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Bacteroides_vulgatus_57955_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Barnesiella_intestinihominis_62208_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Eubacterium_rectale_56927_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Faecalibacterium_prausnitzii_57453_likelihood_surface.csv'
)
DFE_acc_file_list_constant_s = c(
'../Analysis/accessory_cross_species_dfe/Parabacteroides_distasonis_56985_constant_s_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Bacteroides_uniformis_57318_constant_s_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Bacteroides_thetaiotaomicron_56941_constant_s_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Bacteroides_vulgatus_57955_constant_s_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Barnesiella_intestinihominis_62208_constant_s_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Eubacterium_rectale_56927_constant_s_likelihood_surface.csv',
'../Analysis/accessory_cross_species_dfe/Faecalibacterium_prausnitzii_57453_constant_s_likelihood_surface.csv'
)
core_acc_species_list = c(
'Parabacteroides distasonis',
'Bacteroides uniformis',
'Bacteroides thetaiotaomicron',
'Bacteroides vulgatus',
'Barnesiella intestinihominis',
'Eubacterium rectale',
'Faecalibacterium prausnitzii'
)
acc_core_dfe_comparison = numeric(7)
acc_core_dfe_comparison_constant_s = numeric(7)
for (i in 1:length(core_acc_species_list)) {
acc_core_dfe_comparison[i] = cross_species_dfe_comparison(DFE_core_file_list[i], DFE_acc_file_list[i])
acc_core_dfe_comparison_constant_s[i] = cross_species_dfe_comparison(DFE_core_file_list_constant_s[i], DFE_acc_file_list_constant_s[i])
}
# 206 significant comparisons when holding s constant
sum(dfe_comparison_table[2:3]) / 2
sum(dfe_comparison_table$`num_sig outside genera, s`) / 2
sum(dfe_comparison_table$`num_sig within genera, s`) / 2
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, s`)
Heatmap(dfe_comparison_matrix, rect_gp = gpar(type = "none"),
col=color_scale,
cluster_rows = FALSE, cluster_columns = FALSE,
cell_fun = function(j, i, x, y, w, h, fill) {
if (dfe_comparison_matrix[i, j] < -17.7 && i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white', fontface='italic'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 8, col='blue'))
}
else if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col='white'))
grid.text(sprintf("%.1f", dfe_comparison_matrix[i, j]), x, y, gp = gpar(fontsize = 8))
}
},
row_names_side='left',
column_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
row_names_gp = gpar(fontsize = 12,fontface='italic', col=col_scheme),
show_heatmap_legend = F
)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table$`num_sig outside genera, 2Na*s`) / 2
sum(dfe_comparison_table$`num_sig within genera, 2Na*s`) / 2
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table$`num_sig outside genera, s`) / 2
sum(dfe_comparison_table$`num_sig within genera, s`) / 2
sum(dfe_comparison_table$`num_sig outside genera, 2Na*s`) / 2
sum(dfe_comparison_table$`num_sig within genera, 2Na*s`) / 2
dfe_comparison_matrix
dfe_comparison_matrix
dfe_comparison_matrix * -1
dfe_comparison_matrix = dfe_comparison_matrix * -1
dfe_constant_s_matrix = dfe_comparison_matrix * -1
write.csv(dfe_comparison_matrix, '../Analysis/cross_species_dfe/dfe_comparison_matrix.csv')
write.csv(dfe_constant_s_matrix, '../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv')
dfe_comparison_matrix
dfe_comparison_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_matrix.csv', header=TRUE)
dfe_comparison_matrix
dfe_comparison_matrix = dfe_comparison_matrix[, -1]
rownames(dfe_comparison_matrix) = phylogenetic_levels
colnames(dfe_comparison_matrix) = phylogenetic_levels
dfe_comparison_matrix
sum(dfe_comparison_matrix > 17.71234) / 2
# 131
sum(dfe_constant_s_matrix > 17.71234) / 2
dfe_constant_s_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv', header=TRUE)
dfe_constant_s_matrix = dfe_constant_s_matrix[, -1]
rownames(dfe_constant_s_matrix) = phylogenetic_levels
colnames(dfe_constant_s_matrix) = phylogenetic_levels
dfe_constant_s_matrix
dfe_constant_s_matrix = dfe_constant_s_matrix * -1
write.csv(dfe_constant_s_matrix, '../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv')
dfe_constant_s_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv', header=TRUE)
dfe_constant_s_matrix = dfe_constant_s_matrix[, -1]
rownames(dfe_constant_s_matrix) = phylogenetic_levels
colnames(dfe_constant_s_matrix) = phylogenetic_levels
dfe_constant_s_matrix
# 131
sum(dfe_constant_s_matrix > 17.71234) / 2
dfe_constant_s_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv', header=TRUE)
dfe_constant_s_matrix = dfe_constant_s_matrix[, -1]
rownames(dfe_constant_s_matrix) = phylogenetic_levels
colnames(dfe_constant_s_matrix) = phylogenetic_levels
dfe_constant_s_matrix
dfe_constant_s_matrix * -1
dfe_constant_s_matrix * -2
dfe_constant_s_matrix = dfe_constant_s_matrix * -2
write.csv(dfe_constant_s_matrix, '../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv')
dfe_constant_s_matrix = read.csv('../Analysis/cross_species_dfe/dfe_comparison_constant_s_matrix.csv', header=TRUE)
dfe_constant_s_matrix = dfe_constant_s_matrix[, -1]
rownames(dfe_constant_s_matrix) = phylogenetic_levels
colnames(dfe_constant_s_matrix) = phylogenetic_levels
dfe_constant_s_matrix
# 131
sum(dfe_constant_s_matrix > 17.71234) / 2
dfe_comparison_matrix
dfe_constant_s_matrix
dfe_comparison_significant = numeric(27)
dfe_constant_s_significant = numeric(27)
dfe_comparison_significant_within = numeric(27)
dfe_constant_s_significant_within = numeric(27)
for (i in 1:27) {
for (j in 1:i) {
genus_i = strsplit(phylogenetic_levels[i], ' ')[[1]][1]
genus_j = strsplit(phylogenetic_levels[j], ' ')[[1]][1]
if (genus_i !=  genus_j){
if (dfe_comparison_matrix[i, j] > 17.7) {
dfe_comparison_significant[i] = dfe_comparison_significant[i] + 1
dfe_comparison_significant[j] = dfe_comparison_significant[j] + 1
}
if (dfe_constant_s_matrix[i, j] > 17.7) {
dfe_constant_s_significant[i] = dfe_constant_s_significant[i] + 1
dfe_constant_s_significant[j] = dfe_constant_s_significant[j] + 1
}
}
if (genus_i == genus_j){
if (dfe_comparison_matrix[i, j] > 17.7) {
dfe_comparison_significant_within[i] = dfe_comparison_significant_within[i] + 1
dfe_comparison_significant_within[j] = dfe_comparison_significant_within[j] + 1
}
if (dfe_constant_s_matrix[i, j] > 17.7) {
dfe_constant_s_significant_within[i] = dfe_constant_s_significant_within[i] + 1
dfe_constant_s_significant_within[j] = dfe_constant_s_significant_within[j] + 1
}
}
}
}
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
dfe_comparison_significant = numeric(27)
dfe_constant_s_significant = numeric(27)
dfe_comparison_significant_within = numeric(27)
dfe_constant_s_significant_within = numeric(27)
for (i in 1:27) {
for (j in 1:i) {
genus_i = strsplit(phylogenetic_levels[i], ' ')[[1]][1]
genus_j = strsplit(phylogenetic_levels[j], ' ')[[1]][1]
if (genus_i !=  genus_j){
if (dfe_comparison_matrix[i, j] > 17.7) {
dfe_comparison_significant[i] = dfe_comparison_significant[i] + 1
dfe_comparison_significant[j] = dfe_comparison_significant[j] + 1
}
if (dfe_constant_s_matrix[i, j] > 17.7) {
dfe_constant_s_significant[i] = dfe_constant_s_significant[i] + 1
dfe_constant_s_significant[j] = dfe_constant_s_significant[j] + 1
}
}
if (genus_i == genus_j){
if (dfe_comparison_matrix[i, j] > 17.7) {
dfe_comparison_significant_within[i] = dfe_comparison_significant_within[i] + 1
dfe_comparison_significant_within[j] = dfe_comparison_significant_within[j] + 1
}
if (dfe_constant_s_matrix[i, j] > 17.7) {
dfe_constant_s_significant_within[i] = dfe_constant_s_significant_within[i] + 1
dfe_constant_s_significant_within[j] = dfe_constant_s_significant_within[j] + 1
}
}
}
}
dfe_comparison_table = data.frame(species=phylogenetic_levels,
dfe_comparison_between=dfe_comparison_significant,
dfe_comparison_within=dfe_comparison_significant_within,
dfe_constant_s_between=dfe_constant_s_significant,
dfe_constant_s_within=dfe_constant_s_significant_within)
names(dfe_comparison_table) = c(
'Species',
'num_sig outside genera, s',
'num_sig within genera, s',
'num_sig outside genera, 2Na*s',
'num_sig within genera, 2Na*s'
)
# 206 significant comparisons when holding s constant
sum(dfe_comparison_table[2:3]) / 2
# 131 significant comparisons when holding 2Nas constant
sum(dfe_comparison_table[4:5])/ 2
sum(dfe_comparison_table$`num_sig outside genera, s`) / 2
sum(dfe_comparison_table$`num_sig within genera, s`) / 2
sum(dfe_comparison_table$`num_sig outside genera, 2Na*s`) / 2
sum(dfe_comparison_table$`num_sig within genera, 2Na*s`) / 2
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig outside genera, 2Na*s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig outside genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[2:5, ]$`num_sig within genera, 2Na*s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, s`)
sum(dfe_comparison_table[10:17, ]$`num_sig within genera, 2Na*s`)
# 95% CI based on chi-squared distribution with two degrees of freedom (Gamma DFE)
qchisq(1 - 0.05/7, df=2)
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping, shape=18, size=3) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2,
color=color_mapping)
difference_plot
temp_demography_df$species
all_genes_demography_df$species
wilcox.test(temp_demography_df$nu_mle, all_genes_demography_df$nu_mle, paired=T)
