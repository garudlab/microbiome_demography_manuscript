area(2, 1, 2, 1),
area(2, 2, 2, 2),
area(1, 3, 2, 6)
#area(3, 3, 6, 4),
#area(3, 5, 6, 6)
)
p1 = plot_best_fit_sfs_3A(a_muciniphila_best_fit) + ggtitle('Akkermansia muciniphila')
p1_l = plot_likelihood_surface_contour_3C('../Analysis/Akkermansia_muciniphila_55290_downsampled_14/core_likelihood_surface.csv')
p30 = plot_best_fit_sfs_3B(r_bromii_best_fit) + ggtitle('Ruminococcus bromii')
p30_l = plot_likelihood_surface_contour_3D('../Analysis/Ruminococcus_bromii_62047_downsampled_14/core_likelihood_surface.csv')
# 2000 x 900
p1 + p1_l + # A. muciniphila
p30 + p30_l + #R. bicirculans
demography_scatter +
plot_layout(design=design)
# 2000 x 1900
# p1 + p1_l + # A. muciniphila
#   p30 + p30_l + #R. bicirculans
#   demography_scatter +
#   plot_nu_distribution_fig +
#   plot_tau_distribution_fig +
#   plot_layout(design=design)
# Accessory vs. Core genes demographic comparison
accessory_core_demography = data.frame(species=phylogenetic_levels,
core_nu = numeric(27),
core_years = numeric(27),
core_na = numeric(27),
acc_nu = numeric(27),
acc_years = numeric(27),
acc_na = numeric(27))
for (i in 1:length(two_epoch_file_list)) {
accessory_core_demography[i, 2:4] = read_demography_info(two_epoch_file_list[i])
accessory_core_demography[i, 5:7] = read_demography_info(accessory_two_epoch_file_list[i])
}
colnames(accessory_core_demography) = c('Species',
'Core, Nu',
'Core, Years',
'Core, N_anc',
'Accessory, Nu',
'Accessory, Years',
'Accessory, N_Anc')
# write.csv(accessory_core_demography, '../Summary/accessory_core_demography_comparison.csv', row.names=FALSE)
accessory_core_demography$`Accessory, N_Anc`
accessory_core_demography[c(7, 13, 14, 17, 18, 22, 23, 27), ]
ggplot(accessory_core_demography[c(7, 13, 14, 17, 18, 22, 23, 27), ], aes(x = `Core, N_anc`, y = `Accessory, N_Anc`)) +
geom_point(aes(color=Species), show.legend=FALSE) +
labs(x = "Core genes", y = "Accessory genes") +
ggtitle("Estimated ancestral effective population size") +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
xlim(0, 4E7) +
ylim(0, 4E7) +
geom_text_repel(aes(label = Species, color=Species, fontface = 'italic'), show.legend = FALSE) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
### Supplemental Table 3
one_epoch_likelihood = numeric(27)
one_epoch_AIC = numeric(27)
two_epoch_likelihood = numeric(27)
two_epoch_AIC = numeric(27)
two_epoch_nu = numeric(27)
two_epoch_tau = numeric(27)
two_epoch_time = numeric(27)
three_epoch_likelihood = numeric(27)
three_epoch_AIC = numeric(27)
three_epoch_nu_bottleneck = numeric(27)
three_epoch_nu_contemporary = numeric(27)
three_epoch_tau_bottleneck = numeric(27)
three_epoch_tau_contemporary = numeric(27)
three_epoch_time_total = numeric(27)
for (i in 1:length(one_epoch_file_list)) {
one_epoch_likelihood[i] = return_demography_likelihood(one_epoch_file_list[i])
one_epoch_AIC[i] = AIC_from_demography(one_epoch_file_list[i])
two_epoch_likelihood[i] = return_demography_likelihood(two_epoch_file_list[i])
two_epoch_AIC[i] = AIC_from_demography(two_epoch_file_list[i])
two_epoch_nu[i] = return_demography_params(two_epoch_file_list[i])[1]
two_epoch_tau[i] = return_demography_params(two_epoch_file_list[i])[2]
two_epoch_time[i] = time_from_demography(two_epoch_file_list[i])
three_epoch_likelihood[i] = return_demography_likelihood(three_epoch_file_list[i])
three_epoch_AIC[i] = AIC_from_demography(three_epoch_file_list[i])
three_epoch_nu_bottleneck[i] = return_demography_params(three_epoch_file_list[i])[1]
three_epoch_nu_contemporary[i] = return_demography_params(three_epoch_file_list[i])[2]
three_epoch_tau_bottleneck[i] = return_demography_params(three_epoch_file_list[i])[3]
three_epoch_tau_contemporary[i] = return_demography_params(three_epoch_file_list[i])[4]
three_epoch_time_total[i] = time_from_demography(three_epoch_file_list[i])
}
table_s3 = data.frame(
species=phylogenetic_levels,
one_epoch_likelihood,
one_epoch_AIC,
two_epoch_likelihood,
two_epoch_AIC,
two_epoch_nu,
two_epoch_tau,
two_epoch_time,
three_epoch_likelihood,
three_epoch_AIC,
three_epoch_nu_bottleneck,
three_epoch_nu_contemporary,
three_epoch_tau_bottleneck,
three_epoch_tau_contemporary,
three_epoch_time_total
)
names(table_s3) = c(
'Species',
'One epoch, log likelihood',
'One epoch, AIC',
'Two epoch, log likelihood',
'Two epoch, AIC',
'Two epoch, nu',
'Two epoch, tau',
'Two epoch, time in years',
'Three epoch, log likelihood',
'Three epoch, AIC',
'Three epoch, nu (bottleneck)',
'Three epoch, nu (contemporary)',
'Three epoch, tau (bottleneck)',
'Three epoch, tau (contemporary)',
'Three epoch, time in years'
)
write.csv(table_s3, '../Summary/Supplemental_Table_3.csv', row.names = F)
### Supplemental Table 4
names(nu_tau_distribution) = c(
'Species',
'Nu, MLE',
'Time in years, MLE',
'Low estimate of Nu',
'High estimate of Nu',
'Low estimate of time in years',
'High estimate of time in years'
)
write.csv(nu_tau_distribution, '../Summary/Supplemental_Table_4.csv', row.names = F)
### Supplemental Table 5
gamma_likelihood = numeric(27)
gamma_AIC = numeric(27)
gamma_alpha = numeric(27)
gamma_beta = numeric(27)
neugamma_likelihood = numeric(27)
neugamma_AIC = numeric(27)
neugamma_pneu = numeric(27)
neugamma_alpha = numeric(27)
neugamma_beta = numeric(27)
for (i in 1:length(DFE_file_list)) {
gamma_likelihood[i] = return_DFE_likelihood(DFE_file_list[i])[1]
gamma_AIC[i] = 4 - 2 * gamma_likelihood[i]
gamma_alpha[i] = return_DFE_params(DFE_file_list[i])[1]
gamma_beta[i] = return_DFE_params(DFE_file_list[i])[2]
neugamma_likelihood[i] = return_DFE_likelihood(DFE_file_list[i])[2]
neugamma_AIC[i] = 6 - 2 * neugamma_likelihood[i]
neugamma_pneu[i] = return_DFE_params(DFE_file_list[i])[3]
neugamma_alpha[i] = return_DFE_params(DFE_file_list[i])[4]
neugamma_beta[i] = return_DFE_params(DFE_file_list[i])[5]
}
table_s5 = data.frame(
species=phylogenetic_levels,
gamma_likelihood,
gamma_AIC,
gamma_alpha,
gamma_beta,
neugamma_likelihood,
neugamma_AIC,
neugamma_pneu,
neugamma_alpha,
neugamma_beta
)
names(table_s5) = c(
'Species',
'Gamma DFE, Log likelihood',
'Gamma DFE, AIC',
'Gamma DFE, Shape',
'Gamma DFE, Scale',
'Neu-Gamma DFE, Log likelihood',
'Neu-Gamma DFE, AIC',
'Neu-Gamma DFE, Proportion of Neutral Mutations',
'Neu-Gamma DFE, Shape',
'Neu-Gamma DFE, Scale'
)
table_s5
write.csv(table_s5, '../Summary/Supplemental_Table_5.csv', row.names = F)
### Supplemental Table 6
accessory_phylogenetic_levels = c(
'Parabacteroides distasonis',
'Bacteroides uniformis',
'Bacteroides thetaiotaomicron',
'Bacteroides vulgatus',
'Barnesiella intestinihominis',
'Eubacterium rectale',
'Faecalibacterium prausnitzii'
)
accessory_one_epoch_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_one_epoch_demography.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_one_epoch_demography.txt'
)
accessory_two_epoch_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_two_epoch_demography.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_two_epoch_demography.txt'
)
accessory_three_epoch_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_three_epoch_demography.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_three_epoch_demography.txt'
)
accessory_one_epoch_likelihood = numeric(7)
accessory_one_epoch_AIC = numeric(7)
accessory_two_epoch_likelihood = numeric(7)
accessory_two_epoch_AIC = numeric(7)
accessory_two_epoch_nu = numeric(7)
accessory_two_epoch_tau = numeric(7)
accessory_two_epoch_time = numeric(7)
accessory_three_epoch_likelihood = numeric(7)
accessory_three_epoch_AIC = numeric(7)
accessory_three_epoch_nu_bottleneck = numeric(7)
accessory_three_epoch_nu_contemporary = numeric(7)
accessory_three_epoch_tau_bottleneck = numeric(7)
accessory_three_epoch_tau_contemporary = numeric(7)
accessory_three_epoch_time_total = numeric(7)
for (i in 1:length(accessory_one_epoch_file_list)) {
accessory_one_epoch_likelihood[i] = return_demography_likelihood(accessory_one_epoch_file_list[i])
accessory_one_epoch_AIC[i] = AIC_from_demography(accessory_one_epoch_file_list[i])
accessory_two_epoch_likelihood[i] = return_demography_likelihood(accessory_two_epoch_file_list[i])
accessory_two_epoch_AIC[i] = AIC_from_demography(accessory_two_epoch_file_list[i])
accessory_two_epoch_nu[i] = return_demography_params(accessory_two_epoch_file_list[i])[1]
accessory_two_epoch_tau[i] = return_demography_params(accessory_two_epoch_file_list[i])[2]
accessory_two_epoch_time[i] = time_from_demography(accessory_two_epoch_file_list[i])
accessory_three_epoch_likelihood[i] = return_demography_likelihood(accessory_three_epoch_file_list[i])
accessory_three_epoch_AIC[i] = AIC_from_demography(accessory_three_epoch_file_list[i])
accessory_three_epoch_nu_bottleneck[i] = return_demography_params(accessory_three_epoch_file_list[i])[1]
accessory_three_epoch_nu_contemporary[i] = return_demography_params(accessory_three_epoch_file_list[i])[2]
accessory_three_epoch_tau_bottleneck[i] = return_demography_params(accessory_three_epoch_file_list[i])[3]
accessory_three_epoch_tau_contemporary[i] = return_demography_params(accessory_three_epoch_file_list[i])[4]
accessory_three_epoch_time_total[i] = time_from_demography(accessory_three_epoch_file_list[i])
}
table_s6 = data.frame(
species=accessory_phylogenetic_levels,
accessory_one_epoch_likelihood,
accessory_one_epoch_AIC,
accessory_two_epoch_likelihood,
accessory_two_epoch_AIC,
accessory_two_epoch_nu,
accessory_two_epoch_tau,
accessory_two_epoch_time,
accessory_three_epoch_likelihood,
accessory_three_epoch_AIC,
accessory_three_epoch_nu_bottleneck,
accessory_three_epoch_nu_contemporary,
accessory_three_epoch_tau_bottleneck,
accessory_three_epoch_tau_contemporary,
accessory_three_epoch_time_total
)
table_s6
write.csv(table_s6, '../Summary/Supplemental_Table_6.csv', row.names = F)
### Supplemental Table 7
accessory_DFE_file_list = c(
'../Analysis/Parabacteroides_distasonis_56985_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_uniformis_57318_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Bacteroides_vulgatus_57955_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Eubacterium_rectale_56927_downsampled_14/accessory_inferred_DFE.txt',
'../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/accessory_inferred_DFE.txt'
)
accessory_gamma_likelihood = numeric(7)
accessory_gamma_AIC = numeric(7)
accessory_gamma_alpha = numeric(7)
accessory_gamma_beta = numeric(7)
accessory_neugamma_likelihood = numeric(7)
accessory_neugamma_AIC = numeric(7)
accessory_neugamma_pneu = numeric(7)
accessory_neugamma_alpha = numeric(7)
accessory_neugamma_beta = numeric(7)
for (i in 1:length(accessory_DFE_file_list)) {
accessory_gamma_likelihood[i] = return_DFE_likelihood(accessory_DFE_file_list[i])[1]
accessory_gamma_AIC[i] = 4 - 2 * accessory_gamma_likelihood[i]
accessory_gamma_alpha[i] = return_DFE_params(accessory_DFE_file_list[i])[1]
accessory_gamma_beta[i] = return_DFE_params(accessory_DFE_file_list[i])[2]
accessory_neugamma_likelihood[i] = return_DFE_likelihood(accessory_DFE_file_list[i])[2]
accessory_neugamma_AIC[i] = 6 - 2 * accessory_neugamma_likelihood[i]
accessory_neugamma_pneu[i] = return_DFE_params(accessory_DFE_file_list[i])[3]
accessory_neugamma_alpha[i] = return_DFE_params(accessory_DFE_file_list[i])[4]
accessory_neugamma_beta[i] = return_DFE_params(accessory_DFE_file_list[i])[5]
}
table_s7 = data.frame(
species=accessory_phylogenetic_levels,
accessory_gamma_likelihood,
accessory_gamma_AIC,
accessory_gamma_alpha,
accessory_gamma_beta,
accessory_neugamma_likelihood,
accessory_neugamma_AIC,
accessory_neugamma_pneu,
accessory_neugamma_alpha,
accessory_neugamma_beta
)
names(table_s7) = c(
'Species',
'Gamma DFE, Log likelihood',
'Gamma DFE, AIC',
'Gamma DFE, Shape',
'Gamma DFE, Scale',
'Neu-Gamma DFE, Log likelihood',
'Neu-Gamma DFE, AIC',
'Neu-Gamma DFE, Proportion of Neutral Mutations',
'Neu-Gamma DFE, Shape',
'Neu-Gamma DFE, Scale'
)
table_s7
write.csv(table_s7, '../Summary/Supplemental_Table_7.csv', row.names = F)
### Supplemental Table 8
names(acc_core_dfe_LRT_table) = c(
'Species',
'LRT Statistic, 2N_Anc*s',
'LRT Statistic, s'
)
acc_core_dfe_LRT_table
write.csv(acc_core_dfe_LRT_table, '../Summary/Supplemental_Table_8.csv', row.names = F)
### Figure S7
all_genes_phylogenetic_levels = c(
'Bacteroidales bacterium',
'Alistipes finegoldii',
'Alistipes onderdonkii',
'Alistipes shahii',
'Odoribacter splanchnicus',
'Parabacteroides distasonis',
'Parabacteroides merdae',
'Prevotella copri',
'Bacteroides fragilis',
'Bacteroides cellulosilyticus',
'Bacteroides stercoris',
'Bacteroides thetaiotaomicron',
'Bacteroides xylanisolvens',
'Bacteroides vulgatus',
'Barnesiella intestinihominis',
'Akkermansia muciniphila',
'Phascolarctobacterium species',
'Eubacterium eligens',
'Eubacterium rectale',
'Oscillibacter species',
'Ruminococcus bromii',
'Ruminococcus bicirculans',
'Faecalibacterium prausnitzii'
)
temp_demography_df = demography_df
temp_demography_df
temp_demography_df$species = factor(demography_df$species, levels=all_genes_phylogenetic_levels)
temp_demography_df = na.omit(temp_demography_df)
temp_demography_df <- temp_demography_df[order(temp_demography_df$species), ]
row.names(temp_demography_df) = NULL
temp_demography_df
all_genes_two_epoch_nu_tau = read.csv('../Summary/all_genes_two_epoch_demography_interpretation.csv')
all_genes_three_epoch_nu_tau = read.csv('../Summary/all_genes_three_epoch_demography_interpretation.csv', nrows=1)
all_genes_two_epoch_nu_tau$demography = 'Two Epoch'
all_genes_three_epoch_nu_tau$demography = 'Three Epoch'
all_genes_three_epoch_nu_tau = all_genes_three_epoch_nu_tau[-c(2,4:7)]
colnames(all_genes_two_epoch_nu_tau) = c('species', 'nu_mle', 'time_mle', 'time_high', 'demography')
colnames(all_genes_three_epoch_nu_tau) = c('species', 'nu_mle', 'time_mle', 'time_high', 'demography')
all_genes_demography_df =  rbind(all_genes_two_epoch_nu_tau, all_genes_three_epoch_nu_tau)
all_genes_demography_df
all_genes_demography_df$species = factor(all_genes_demography_df$species, levels=all_genes_phylogenetic_levels)
all_genes_demography_df
all_genes_species_highlight = c()
all_genes_typeface = ifelse(all_genes_demography_df$species %in% all_genes_species_highlight, 4, 3)
all_genes_demography_df_highlight = all_genes_demography_df[all_genes_demography_df$species %in% all_genes_species_highlight, ]
options(ggrepel.max.overlaps = Inf)
x_label_text = expression(nu == frac(N[current], N[ancestral]))
temp_demography_scatter = ggscatter(temp_demography_df, x="nu_mle", y="time_mle", color='species', size=3) +
ylab('Estimated time in years since most recent demographic event') +
xlab(x_label_text) +
geom_vline(xintercept=1.0, color='red', linewidth=1, linetype='dashed') +
scale_shape_manual(name = "Best-Fit Demographic Model",
labels = c("Three Epoch", "Two Epoch"),
values = c(17, 19)) +
geom_text_repel(aes(label = species, color=species, fontface = 'italic'), size=all_genes_typeface) +
guides(color=guide_legend(title="Species")) +
scale_x_log10(limits=c(1e-2, 2e5)) +
scale_y_log10(limits=c(2e2, 1e7)) +
theme(legend.position = 'none') +
guides(color = 'none') +
guides(shape = 'none')  +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16))
temp_demography_scatter
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2)
difference_plot
all_genes_demography_df
all_genes_demography_df =  rbind(all_genes_two_epoch_nu_tau, all_genes_three_epoch_nu_tau)
all_genes_demography_df
all_genes_demography_df$species = factor(all_genes_demography_df$species, levels=all_genes_phylogenetic_levels)
all_genes_demography_df
all_genes_phylogenetic_levels
all_genes_demography_df$species = factor(all_genes_demography_df$species, levels=all_genes_phylogenetic_levels)
all_genes_demography_df
all_genes_demography_df$species
all_genes_demography_df
temp_demography_df
test = cbind(temp_demography_df, all_genes_demography_df)
test
all_genes_demography_df$species
temp_demography_df$species
all_genes_demography_df$species == temp_demography_df$species
unique(all_genes_demography_df$species) == unique(temp_demography_df$species)
temp_demography_df$species
all_genes_demography_df
all_genes_demography_df =  rbind(all_genes_two_epoch_nu_tau, all_genes_three_epoch_nu_tau)
all_genes_demography_df
all_genes_demography_df =  rbind(all_genes_two_epoch_nu_tau, all_genes_three_epoch_nu_tau)
all_genes_demography_df
all_genes_demography_df$species = factor(all_genes_demography_df$species, levels=all_genes_phylogenetic_levels)
all_genes_demography_df <- all_genes_demography_df[order(all_genes_demography_df$species), ]
all_genes_demography_df
row.names(all_genes_demography_df) = NULL
all_genes_demography_df
all_genes_species_highlight = c()
all_genes_typeface = ifelse(all_genes_demography_df$species %in% all_genes_species_highlight, 4, 3)
all_genes_demography_df_highlight = all_genes_demography_df[all_genes_demography_df$species %in% all_genes_species_highlight, ]
options(ggrepel.max.overlaps = Inf)
x_label_text = expression(nu == frac(N[current], N[ancestral]))
temp_demography_scatter = ggscatter(temp_demography_df, x="nu_mle", y="time_mle", color='species', size=3) +
ylab('Estimated time in years since most recent demographic event') +
xlab(x_label_text) +
geom_vline(xintercept=1.0, color='red', linewidth=1, linetype='dashed') +
scale_shape_manual(name = "Best-Fit Demographic Model",
labels = c("Three Epoch", "Two Epoch"),
values = c(17, 19)) +
geom_text_repel(aes(label = species, color=species, fontface = 'italic'), size=all_genes_typeface) +
guides(color=guide_legend(title="Species")) +
scale_x_log10(limits=c(1e-2, 2e5)) +
scale_y_log10(limits=c(2e2, 1e7)) +
theme(legend.position = 'none') +
guides(color = 'none') +
guides(shape = 'none')  +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16))
temp_demography_scatter
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2)
difference_plot
plot_build <- ggplot_build(temp_demography_scatter)
color_mapping <- plot_build$data[[1]]$colour
print(color_mapping)
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2)
difference_plot
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping, shape=2) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2)
difference_plot
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping, shape=12) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2)
difference_plot
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping, shape=17) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2)
difference_plot
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping, shape=17, size=3) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2)
difference_plot
difference_plot = temp_demography_scatter +
geom_point(data = all_genes_demography_df,  color=color_mapping, shape=18, size=3) +
geom_segment(aes(x=temp_demography_df$nu_mle, y=temp_demography_df$time_mle,
xend=all_genes_demography_df$nu_mle, yend=all_genes_demography_df$time_mle),
linejoin='round',
lineend='round',
linetype=2,
color=color_mapping)
difference_plot
