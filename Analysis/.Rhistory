panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(size=rel(1.5), angle=40, vjust=1.0, hjust=1)) +
theme(axis.text.y = element_text(size=rel(1.5))) +
theme(axis.title.x = element_text(size=rel(1.5))) +
theme(axis.title.y = element_text(size=rel(1.5))) +
theme(legend.text = element_text(size=rel(1.25))) +
theme(legend.title = element_text(size=rel(1.5))) +
scale_fill_manual(values=c('dodgerblue3', 'goldenrod1')) +
scale_color_manual(values=c('dodgerblue3', 'goldenrod1')) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x,)),
limits = c(0.0001, 0.2)) +
xlab('Cohort') +
ylab('Mean Nucleotide Diversity per Species') +
# ylim(0, 0.03) +
stat_compare_means(method='wilcox.test', label='p.signif', size=6)
# ggtitle('Mean Nucleotide Diversity per Species between Cohorts')
compare_iid_over_1_means
better_pi_comparison_iid + compare_iid_over_1_means + plot_layout(widths = c(3, 1))
better_pi_comparison_iid + compare_iid_over_1_means + plot_layout(widths = c(3, 1))
p1 + p1_l + # A. muciniphila
p20 + p20_l + # E. eligens
p30 + p30_l + #R. bicirculans
demography_scatter +
plot_layout(design=design)
plot_best_fit_sfs = function(input_data) {
input_data = data.frame(input_data)
colnames(input_data) = c(
'Empirical Synonymous',
'Model Synonymous',
'Empirical Nonsynonymous',
'Model Nonsynonymous',
'Species',
'X.axis')
fig = ggplot(melt(input_data, id=c('Species', 'X.axis')), aes(x=X.axis, y=as.numeric(value), fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
xlab('Minor Allele Frequency') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),                       panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("blue4", "steelblue3", "goldenrod3", "goldenrod1")) +
theme(legend.position="none") +
theme(plot.title = element_text(face = "italic"))
return(fig)
}
p1 = plot_best_fit_sfs(a_muciniphila_best_fit) + ggtitle('Akkermansia muciniphila')
p1
p1 = plot_best_fit_sfs(a_muciniphila_best_fit) + ggtitle('Akkermansia muciniphila')
p2 = plot_best_fit_sfs(a_finegoldii_best_fit) + ggtitle('Alistipes finegoldii')
p3 = plot_best_fit_sfs(a_onderdonkii_best_fit) + ggtitle('Alistipes onderdonkii')
# p4 = plot_best_fit_sfs(_best_fit)
p5 = plot_best_fit_sfs(a_shahii_best_fit) + ggtitle('Alistipes shahii')
p6 = plot_best_fit_sfs(b_bacterium_best_fit) + ggtitle('Bacteroidales bacterium')
# p7 = plot_best_fit_sfs(_best_fit)
p8 = plot_best_fit_sfs(b_cellulosilyticus_best_fit) + ggtitle('Bacteroides cellulosilyticus')
p9 = plot_best_fit_sfs(b_fragilis_best_fit) + ggtitle('Bacteroides fragilis')
# p10 = plot_best_fit_sfs(_best_fit)
# p11 = plot_best_fit_sfs(_best_fit)
p12 = plot_best_fit_sfs(b_stercoris_best_fit) + ggtitle('Bacteroides stercoris')
p13 = plot_best_fit_sfs(b_thetaiotaomicron_best_fit) + ggtitle('Bacteroides thetaiotaomicron')
# p14 = plot_best_fit_sfs(_best_fit)
p15 = plot_best_fit_sfs(b_vulgatus_best_fit) + ggtitle('Bacteroides vulgatus')
p16 = plot_best_fit_sfs(b_xylanisolvens_best_fit) + ggtitle('Bacteroides xylanisolvens')
p17 = plot_best_fit_sfs(b_intestinihominis_best_fit) + ggtitle('Barnesiella intestinihominis')
# p18 = plot_best_fit_sfs(_best_fit)
# p19 = plot_best_fit_sfs(_best_fit)
p20 = plot_best_fit_sfs(e_eligens_best_fit) + ggtitle('Eubacterium eligens')
p21 = plot_best_fit_sfs(e_rectale_best_fit) + ggtitle('Eubacterium rectale')
p22 = plot_best_fit_sfs(f_prausnitzii_best_fit) + ggtitle('Faecalibacterium prausnitzii')
p23 = plot_best_fit_sfs(o_splanchnicus_best_fit) + ggtitle('Odoribacter splanchnicus')
p24 = plot_best_fit_sfs(oscillibacter_sp_best_fit) + ggtitle('Oscillibacter species')
p25 = plot_best_fit_sfs(p_distasonis_best_fit) + ggtitle('Parabacteroides distasonis')
p26 = plot_best_fit_sfs(p_merdae_best_fit) + ggtitle('Parabacteroides merdae')
p27 = plot_best_fit_sfs(phascolarctobacterium_sp_best_fit) + ggtitle('Phascolarctobacterium species')
p28 = plot_best_fit_sfs(p_copri_best_fit) + ggtitle('Prevotella copri')
p29 = plot_best_fit_sfs(r_bicirculans_best_fit) + ggtitle('Ruminococcus bicirculans')
p30 = plot_best_fit_sfs(r_bromii_best_fit) + ggtitle('Ruminococcus bromii')
p1_l = plot_likelihood_surface_contour('../Analysis/Akkermansia_muciniphila_55290_downsampled_14/likelihood_surface.csv')
p2_l = plot_likelihood_surface_contour('../Analysis/Alistipes_finegoldii_56071_downsampled_14/likelihood_surface.csv')
p3_l = plot_likelihood_surface_contour('../Analysis/Alistipes_onderdonkii_55464_downsampled_14/likelihood_surface.csv')
# p4 = plot_likelihood_surface_contour('../Analysis/Alistipes_putredinis_61533_downsampled_14/likelihood_surface.csv')
p5_l = plot_likelihood_surface_contour('../Analysis/Alistipes_shahii_62199_downsampled_14/likelihood_surface.csv')
p6_l = plot_likelihood_surface_contour('../Analysis/Bacteroidales_bacterium_58650_downsampled_14/likelihood_surface.csv')
# p7 = plot_likelihood_surface_contour('../Analysis/Bacteroides_caccae_53434_downsampled_14/likelihood_surface.csv')
p8_l = plot_likelihood_surface_contour('../Analysis/Bacteroides_cellulosilyticus_58046_downsampled_14/likelihood_surface.csv')
p9_l = plot_likelihood_surface_contour('../Analysis/Bacteroides_fragilis_54507_downsampled_14/likelihood_surface.csv')
# p10 = plot_likelihood_surface_contour('../Analysis/Bacteroides_massiliensis_44749_downsampled_14/likelihood_surface.csv')
# p11 = plot_likelihood_surface_contour('../Analysis/Bacteroides_ovatus_58035_downsampled_14/likelihood_surface.csv')
p12_l = plot_likelihood_surface_contour('../Analysis/Bacteroides_stercoris_56735_downsampled_14/likelihood_surface.csv')
p13_l = plot_likelihood_surface_contour('../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/likelihood_surface.csv')
# p14 = plot_likelihood_surface_contour('../Analysis/Bacteroides_uniformis_57318_downsampled_14/likelihood_surface.csv')
p15_l = plot_likelihood_surface_contour('../Analysis/Bacteroides_vulgatus_57955_downsampled_14/likelihood_surface.csv')
p16_l = plot_likelihood_surface_contour('../Analysis/Bacteroides_xylanisolvens_57185_downsampled_14/likelihood_surface.csv')
p17_l = plot_likelihood_surface_contour('../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/likelihood_surface.csv')
# p18 = plot_likelihood_surface_contour('../Analysis/Coprococcus_sp_62244_downsampled_14/likelihood_surface.csv')
# p19 = plot_likelihood_surface_contour('../Analysis/Dialister_invisus_61905_downsampled_14/likelihood_surface.csv')
p20_l = plot_likelihood_surface_contour('../Analysis/Eubacterium_eligens_61678_downsampled_14/likelihood_surface.csv')
p21_l = plot_likelihood_surface_contour('../Analysis/Eubacterium_rectale_56927_downsampled_14/likelihood_surface.csv')
p22_l = plot_likelihood_surface_contour('../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/likelihood_surface.csv')
p23_l = plot_likelihood_surface_contour('../Analysis/Odoribacter_splanchnicus_62174_downsampled_14/likelihood_surface.csv')
p24_l = plot_likelihood_surface_contour('../Analysis/Oscillibacter_sp_60799_downsampled_14/likelihood_surface.csv')
p25_l = plot_likelihood_surface_contour('../Analysis/Parabacteroides_distasonis_56985_downsampled_14/likelihood_surface.csv')
p26_l = plot_likelihood_surface_contour('../Analysis/Parabacteroides_merdae_56972_downsampled_14/likelihood_surface.csv')
p27_l = plot_likelihood_surface_contour('../Analysis/Phascolarctobacterium_sp_59817_downsampled_14/likelihood_surface.csv')
p28_l = plot_likelihood_surface_contour('../Analysis/Prevotella_copri_61740_downsampled_14/likelihood_surface.csv')
p29_l = plot_likelihood_surface_contour('../Analysis/Ruminococcus_bicirculans_59300_downsampled_14/likelihood_surface.csv')
p30_l = plot_likelihood_surface_contour('../Analysis/Ruminococcus_bromii_62047_downsampled_14/likelihood_surface.csv')
#phylogenetic_levels = c(
#  'Bacteroidales bacterium', p6
#  # 'Alistipes putredinis',
#  'Alistipes finegoldii', p2
#  'Alistipes onderdonkii', p3
#  'Alistipes shahii', p5
#  'Odoribacter splanchnicus',  p23
#  'Parabacteroides distasonis',  p25
#  'Parabacteroides merdae', p26
#  'Prevotella copri', p28
#  'Bacteroides fragilis',  p9
#  'Bacteroides cellulosilyticus', p8
#  'Bacteroides stercoris',  p12
#  # 'Bacteroides uniformis',
#  'Bacteroides thetaiotaomicron', p13
#  # 'Bacteroides ovatus',
#  'Bacteroides xylanisolvens', p16
#  # 'Bacteroides caccae',
#  # 'Bacteroides massiliensis',
#  'Bacteroides vulgatus', p15
#  'Barnesiella intestinihominis', p17
#  'Akkermansia muciniphila', p1
#  # 'Dialister invivus',
#  'Phascolarctobacterium species', p27
#  'Eubacterium eligens', p20
#  'Eubacterium rectale', p21
#  # 'Coprococcus species',
#  'Oscillibacter species', p24
#  'Ruminococcus bromii', p30
#  'Ruminococcus bicirculans',  p29
#  'Faecalibacterium prausnitzii' p22
#)
# 1600 x 16000
sfs_and_likelihood = p6 + p6_l +
p2 + p2_l +
p3 + p3_l +
p5 + p5_l +
p23 + p23_l +
p25 + p25_l +
p26 + p26_l  +
p28 + p28_l +
p9 + p9_l +
p8 + p8_l +
p12 + p12_l +
p13 + p13_l +
p16 + p16_l +
p15 + p15_l +
p17 + p17_l +
p1 + p1_l +
p27 + p27_l +
p20 + p20_l +
p21 + p21_l +
p24 + p24_l +
p30 + p30_l +
p29 + p29_l +
p22 + p22_l +
plot_layout(ncol=2)
# 3200 x 16000
design = c(
area(1, 1, 1, 1),
area(1, 2, 1, 2),
area(2, 1, 2, 1),
area(2, 2, 2, 2),
area(3, 1, 3, 1),
area(3, 2, 3, 2),
area(1, 3, 3, 5)
)
p1 + p1_l + # A. muciniphila
p20 + p20_l + # E. eligens
p30 + p30_l + #R. bicirculans
demography_scatter +
plot_layout(design=design)
phylogenetic_levels = c(
'Bacteroidales bacterium',
# 'Alistipes putredinis',
'Alistipes finegoldii',
'Alistipes onderdonkii',
'Alistipes shahii',
'Odoribacter splanchnicus',
'Parabacteroides distasonis',
'Parabacteroides merdae',
'Prevotella copri',
'Bacteroides fragilis',
'Bacteroides cellulosilyticus',
'Bacteroides stercoris',
# 'Bacteroides uniformis',
'Bacteroides thetaiotaomicron',
# 'Bacteroides ovatus',
'Bacteroides xylanisolvens',
# 'Bacteroides caccae',
# 'Bacteroides massiliensis',
'Bacteroides vulgatus',
'Barnesiella intestinihominis',
'Akkermansia muciniphila',
# 'Dialister invivus',
'Phascolarctobacterium species',
'Eubacterium eligens',
'Eubacterium rectale',
# 'Coprococcus species',
'Oscillibacter species',
'Ruminococcus bromii',
'Ruminococcus bicirculans',
'Faecalibacterium prausnitzii'
)
dfe_df$species = factor(dfe_df$species, levels=phylogenetic_levels)
dfe_dadi_df$species = factor(dfe_dadi_df$species, levels=phylogenetic_levels)
# dfe_df$value = dfe_df$value * 2
dfe_df$value[dfe_df$value <= 1e-12] = 1e-12
dfe_df$value[dfe_df$value >= 1] = 1
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_high', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=6.93E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
dfe_df = rbind(
melt(a_muciniphila_dfe_params),
melt(a_finegoldii_dfe_params),
melt(a_onderdonkii_dfe_params),
# melt(a_putredinis_dfe_params),
melt(a_shahii_dfe_params),
melt(b_bacterium_dfe_params),
# melt(b_caccae_dfe_params),
melt(b_cellulosilyticus_dfe_params),
melt(b_fragilis_dfe_params),
# melt(b_ovatus_dfe_params),
melt(b_stercoris_dfe_params),
melt(b_thetaiotaomicron_dfe_params),
# melt(b_uniformis_dfe_params),
melt(b_vulgatus_dfe_params),
melt(b_xylanisolvens_dfe_params),
melt(b_intestinihominis_dfe_params),
# melt(d_invisus_dfe_params),
melt(e_eligens_dfe_params),
melt(e_rectale_dfe_params),
melt(f_prausnitzii_dfe_params),
melt(o_splanchnicus_dfe_params),
melt(oscillibacter_sp_dfe_params),
melt(p_distasonis_dfe_params),
melt(p_merdae_dfe_params),
melt(phascolarctobacterium_sp_dfe_params),
melt(p_copri_dfe_params),
melt(r_bicirculans_dfe_params),
melt(r_bromii_dfe_params)
)
dfe_dadi_df = rbind(
melt(a_muciniphila_dfe_dadi_params),
melt(a_finegoldii_dfe_dadi_params),
melt(a_onderdonkii_dfe_dadi_params),
# melt(a_putredinis_dfe_dadi_params),
melt(a_shahii_dfe_dadi_params),
melt(b_bacterium_dfe_dadi_params),
# melt(b_caccae_dfe_dadi_params),
melt(b_cellulosilyticus_dfe_dadi_params),
melt(b_fragilis_dfe_dadi_params),
# melt(b_ovatus_dfe_dadi_params),
melt(b_stercoris_dfe_dadi_params),
melt(b_thetaiotaomicron_dfe_dadi_params),
# melt(b_uniformis_dfe_dadi_params),
melt(b_vulgatus_dfe_dadi_params),
melt(b_xylanisolvens_dfe_dadi_params),
melt(b_intestinihominis_dfe_dadi_params),
# melt(d_invisus_dfe_dadi_params),
melt(e_eligens_dfe_dadi_params),
melt(e_rectale_dfe_dadi_params),
melt(f_prausnitzii_dfe_dadi_params),
melt(o_splanchnicus_dfe_dadi_params),
melt(oscillibacter_sp_dfe_dadi_params),
melt(p_distasonis_dfe_dadi_params),
melt(p_merdae_dfe_dadi_params),
melt(phascolarctobacterium_sp_dfe_dadi_params),
melt(p_copri_dfe_dadi_params),
melt(r_bicirculans_dfe_dadi_params),
melt(r_bromii_dfe_dadi_params)
)
phylogenetic_levels = c(
'Bacteroidales bacterium',
# 'Alistipes putredinis',
'Alistipes finegoldii',
'Alistipes onderdonkii',
'Alistipes shahii',
'Odoribacter splanchnicus',
'Parabacteroides distasonis',
'Parabacteroides merdae',
'Prevotella copri',
'Bacteroides fragilis',
'Bacteroides cellulosilyticus',
'Bacteroides stercoris',
# 'Bacteroides uniformis',
'Bacteroides thetaiotaomicron',
# 'Bacteroides ovatus',
'Bacteroides xylanisolvens',
# 'Bacteroides caccae',
# 'Bacteroides massiliensis',
'Bacteroides vulgatus',
'Barnesiella intestinihominis',
'Akkermansia muciniphila',
# 'Dialister invivus',
'Phascolarctobacterium species',
'Eubacterium eligens',
'Eubacterium rectale',
# 'Coprococcus species',
'Oscillibacter species',
'Ruminococcus bromii',
'Ruminococcus bicirculans',
'Faecalibacterium prausnitzii'
)
dfe_df$species = factor(dfe_df$species, levels=phylogenetic_levels)
dfe_dadi_df$species = factor(dfe_dadi_df$species, levels=phylogenetic_levels)
# dfe_df$value = dfe_df$value * 2
dfe_df$value[dfe_df$value <= 1e-12] = 1e-12
dfe_df$value[dfe_df$value >= 1] = 1
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_high', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=6.93E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'neugamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Neutral + Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'neugamma_dfe_dist_high', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Neutral + Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=6.93E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(axis.text.x = element_text(face='italic')) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(axis.text.y = element_text(face='italic')) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(axis.text.y = element_text(face='italic')) +
theme(legend.position = "none") +
xlab('Selective Effect')
# Read the Newick file
input_tree <- read.tree("../Data/midas_tree/midas_db_v1.2/species_tree.newick")
# Read the Newick file
input_tree <- read.tree("../Data/midas_tree/midas_db_v1.2/species_tree.newick")
# Specify the tip labels for the subtree you want to extract
species_subtree = c(
'Akkermansia_muciniphila_55290',
'Alistipes_finegoldii_56071',
'Alistipes_onderdonkii_55464',
# 'Alistipes_putredinis_61533',
'Alistipes_shahii_62199',
'Bacteroidales_bacterium_58650',
# 'Bacteroides_caccae_53434',
'Bacteroides_cellulosilyticus_58046',
'Bacteroides_fragilis_54507',
# 'Bacteroides_massiliensis_44749',
# 'Bacteroides_ovatus_58035',
'Bacteroides_stercoris_56735',
'Bacteroides_thetaiotaomicron_56941',
# 'Bacteroides_uniformis_57318',
'Bacteroides_vulgatus_57955',
'Bacteroides_xylanisolvens_57185',
'Barnesiella_intestinihominis_62208',
# 'Coprococcus_sp_62244',
# 'Dialister_invisus_61905',
'Eubacterium_eligens_61678',
'Eubacterium_rectale_56927',
'Faecalibacterium_prausnitzii_57453',
'Odoribacter_splanchnicus_62174',
'Oscillibacter_sp_60799',
'Parabacteroides_distasonis_56985',
'Parabacteroides_merdae_56972',
'Phascolarctobacterium_sp_59817',
'Prevotella_copri_61740',
'Ruminococcus_bicirculans_59300',
'Ruminococcus_bromii_62047'
)
midas_code_subtree = c()
for (species in species_subtree) {
midas_code_subtree = c(midas_code_subtree, get_species_code_reference(species, output_table))
}
print(midas_code_subtree)
subtree_tips = midas_code_subtree
# Extract the subtree
subtree <- keep.tip(input_tree, subtree_tips)
# Print the extracted subtree
print(subtree)
for (i in 1:length(subtree$tip.label)) {
print(subtree$tip.label[i])
new_tip = get_species_code_reference(subtree$tip.label[i], output_table)
# new_tip = str_sub(new_tip, 1, str_length(new_tip)-6)
subtree$tip.label[i] = new_tip
print(subtree$tip.label[i])
}
plot(subtree)
output_table
subtree
?write.tree
plot(subtree)
write.tree(subtree, file='../Summary/good_species.newick')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(axis.text.y = element_text(face='italic')) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(axis.text.y = element_text(face='italic')) +
theme(axis.text.y = element_text(hjust=0)) +
theme(legend.position = "none") +
xlab('Selective Effect')
