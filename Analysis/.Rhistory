mean(over_iid_df[over_iid_df$species=='Escherichia_coli_58110' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_cf_62236' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_cf_62236' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_cf_62236' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_cf_62236' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_61481' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_61481' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_61481' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_61481' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_57453' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_57453' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_57453' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_57453' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_62201' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_62201' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_62201' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Faecalibacterium_prausnitzii_62201' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Oscillibacter_sp_60799' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Oscillibacter_sp_60799' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Oscillibacter_sp_60799' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Oscillibacter_sp_60799' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Prevotella_copri_61740' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Prevotella_copri_61740' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Prevotella_copri_61740' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Prevotella_copri_61740' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Roseburia_inulinivorans_61943' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Roseburia_inulinivorans_61943' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Roseburia_inulinivorans_61943' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Roseburia_inulinivorans_61943' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' HMP', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' African', ]$ordered_pi =
mean(over_iid_df[over_iid_df$species=='Ruminococcus_bromii_62047' & over_iid_df$Cohort==' African', ]$pairwise_across_pi)
better_pi_comparison_10 <- ggplot(data=over_10_df, aes(x=reorder(species, ordered_pi), y=average_pi, fill=Cohort)) +
geom_boxplot(aes(fill=Cohort), outlier.shape=NA) +
geom_point(pch = 21, position = position_jitterdodge(), size=1.5) +
geom_point(aes(x=species, y=pairwise_across_pi, color=Cohort), size=4, shape=16, position=position_dodge(width=0.75)) +
theme_bw() +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(angle=90, vjust=1.0, hjust=1)) +
xlab('Species') +
ylab('Average within-host pi') +
ggtitle('Pi within hosts and aggregated across hosts, Minimum #samples >= 20')
better_pi_comparison_10
better_pi_comparison_iid <- ggplot(data=over_iid_df, aes(x=reorder(species, ordered_pi), y=average_pi, fill=Cohort)) +
geom_boxplot(aes(fill=Cohort), outlier.shape=NA) +
geom_point(pch = 21, position = position_jitterdodge(), size=1.5) +
geom_point(aes(x=species, y=pairwise_across_pi, color=Cohort), size=4, shape=16, position=position_dodge(width=0.75)) +
theme_bw() +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(size=rel(1.5), angle=90, vjust=1.0, hjust=1)) +
theme(axis.text.y = element_text(size=rel(1.5))) +
theme(axis.title.x = element_text(size=rel(1.5))) +
theme(axis.title.y = element_text(size=rel(1.5))) +
theme(legend.text = element_text(size=rel(1.25))) +
theme(legend.title = element_text(size=rel(1.5))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x,)),
limits = c(0.0001, 0.2)) +
xlab('Species') +
ylab('Nucleotide Diversity') +
# ylim(0, 0.03) +
# stat_compare_means(method='wilcox.test', label = "p.signif", label.x = 0.75,
#                    label.y = 0.0275, size=6)
stat_compare_means(method='wilcox.test', label='p.signif', size=6)
# stat_compare_means(method='wilcox.test', label='p.format')
better_pi_comparison_iid
distinct_iid_df = distinct(over_iid_df, pairwise_across_pi, .keep_all=TRUE)
HMP_distinct_pairwise = distinct_iid_df[distinct_iid_df$Cohort==' HMP', ]$pairwise_across_pi
African_distinct_pairwise = distinct_iid_df[distinct_iid_df$Cohort==' African', ]$pairwise_across_pi
wilcox.test(HMP_distinct_pairwise, African_distinct_pairwise, paired=TRUE)
# Species prevalence
species_prevalence = read.csv('../Summary/species_prevalence.txt', sep=',')
species_prevalence = data.frame(species_prevalence$species, species_prevalence$prevalence)
names(species_prevalence) = c('species', 'prevalence')
species_prevalence$prevalence=species_prevalence$prevalence-2
species_prevalence = subset(species_prevalence, prevalence > 20)
# names(species_prevalence) = c('species', 'prevalence')
ggplot(species_prevalence, aes(x = reorder(species, prevalence), y=prevalence, fill=species)) +
geom_bar(stat='identity') +
theme(legend.position = "none") +
coord_flip() +
xlab('Species') +
ylab('Prevalence') +
ggtitle('Highest Prevalence Gut Microbial Species in North American Microbiomes')
# species_prevalence = species_prevalence[species_prevalence$species_prevalence.prevalence>= 0]
rho_mu = read.csv('../Data/r_mu_dic.csv', header = FALSE)
rho_mu$significant = c('Yes', 'Yes', 'Yes', 'No', 'No',
'No', 'Yes', 'No', 'No', 'No',
'No', 'No', 'No', 'No', 'No',
'No', 'No', 'Yes', 'No', 'No',
'No', 'Yes', 'No', 'No', 'No',
'No', 'No', 'No', 'No', 'No',
'No', 'No', 'No', 'Yes', 'Yes',
'Yes', 'No', 'No', 'No', 'No',
'No')
names(rho_mu) = c('species', 'rho_ratio', 'Significant')
rho_mu_plot = ggplot(aes(x=species, y=rho_ratio), data = rho_mu) +
geom_bar(aes(fill = Significant), stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggtitle('Significance of demographic model vs. ratio of recombination to mutation') +
xlab('Species') +
ylab('Rho / mu')
rho_mu_plot
rho_mu_plot = ggplot(aes(x = reorder(species, -rho_ratio), y = rho_ratio), data = rho_mu) +
geom_bar(stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggtitle('Rate of recombination vs. mutation in commensal gut species') +
xlab('Species') +
ylab('Rho / mu')
rho_mu_plot
# Number of QP samples per species
species_list = c('Akkermansia_muciniphila_55200',
'Alistipes_finegoldii_56071',
'Alistipes_onderdonkii_55464',
'Alistipes_putredinis_61533',
'Alistipes_shahii_62199',
'Bacteroidales_bacterium_58650',
'Bacteroides_caccae_53434',
'Bacteroides_cellulosilyticus',
'Bacteroides_frgailis_5507',
'Bacteroides_massiliensis_44749',
'Bacteroides_ovatus_58035',
'Bacteroides_stercoris',
'Bacteroides_thetaiotaomicron_56941',
'Bacteroides_uniformis_57318',
'Bacteroides_vulgatus_57955',
'Bacteroides_xylanisolvens_57185',
'Barnesiella_intestinihominis_62208',
'Coprococcus_sp_62244',
'Dialest_invisus_61905',
'Eubacterium_eligens_61678',
'Eubacterium_rectale_56927',
'Faecalibacterium_prausnitzii_57453',
'Odoribacter_splanchnicus_62174',
'Oscillibacter_sp_60799',
'Parabacteroides_distasonis_56985',
'Parabacteroides_merdae_56972',
'Phasolarctobacterium_sp_59817',
'Prevotella_copri_61740',
'Ruminococcus_bicirculans_59300',
'Ruminococcus_bromii_62047')
num_qp_samples = c(19, 39, 53, 33, 55,
29, 31, 33, 29, 9,
47, 59, 67, 75, 49,
45, 41, 9, 33, 25,
67, 31, 31, 47, 47,
37, 21, 15, 61, 33)
qp_samples_per_species_csv =
'Akkermansia_muciniphila_55200, 19
Alistipes_finegoldii_56071, 39
Alistipes_onderdonkii_55464, 53
Alistipes_putredinis_61533, 33
Alistipes_shahii_62199, 55
Bacteroidales_bacterium_58650, 29
Bacteroides_caccae_53434, 31
Bacteroides_cellulosilyticus, 33
Bacteroides_frgailis_5507, 29
Bacteroides_massiliensis_44749, 9
Bacteroides_ovatus_58035, 47
Bacteroides_stercoris, 59
Bacteroides_thetaiotaomicron_56941, 67
Bacteroides_uniformis_57318, 75
Bacteroides_vulgatus_57955, 49
Bacteroides_xylanisolvens_57185, 45
Barnesiella_intestinihominis_62208, 41
Coprococcus_sp_62244, 9
Dialest_invisus_61905, 33
Eubacterium_eligens_61678, 25
Eubacterium_rectale_56927, 67
Faecalibacterium_prausnitzii_57453, 31
Odoribacter_splanchnicus_62174, 31
Oscillibacter_sp_60799, 47
Parabacteroides_distasonis_56985, 47
Parabacteroides_merdae_56972, 37
Phasolarctobacterium_sp_59817, 21
Prevotella_copri_61740, 15
Ruminococcus_bicirculans_59300, 61
Ruminococcus_bromii_62047, 33
'
qp_samples_per_species = data.frame(species_list, num_qp_samples)
qp_samples_per_species_plot = ggplot(aes(x=species_list, y=num_qp_samples),
data = qp_samples_per_species) +
geom_bar(stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggtitle('QP samples per species') +
xlab('Species') +
ylab('Number of QP samples')
qp_samples_per_species_plot
qp_samples_per_species_plot_ordered = ggplot(qp_samples_per_species, aes(x = reorder(species_list, -num_qp_samples), y = num_qp_samples)) +
geom_bar(stat = 'identity', position = 'dodge', color='#10549c', fill='#10549c') +
ggtitle('Number of Quasi-phaseable samples per species') +
xlab('Species') +
ylab('Number of Qausi-phaseable samples') +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
qp_samples_per_species_plot_ordered
set.seed(1)
fold_sfs = function(input_sfs) {
input_length = length(input_sfs)
folded_length = length(input_sfs) / 2
if (input_length %% 2 == 1) {
folded_length = folded_length + 1
}
output_sfs = c()
for (i in 1:folded_length) {
output_sfs[i] = input_sfs[i] + input_sfs[input_length - i]
}
return(output_sfs)
}
proportional_sfs = function(input_sfs) {
return (input_sfs / sum(input_sfs))
}
x <- datasim
loglik <- function(theta){
k<- theta[1]
lambda<- theta[2]
out <- sum(dweibull(x,shape = k, scale=lambda, log = TRUE) )
return(out)
}
e_eligens_pi = read.csv('../Scripts/e_eligens_pi_values.txt', header=TRUE)
b_thetaiotaomicron_downsampled_empirical = proportional_sfs(c(11329.94672695546,
6167.075485250698,
4239.177625142324,
3342.60586700556,
2929.626632089841,
2725.643057081244,
2635.300969843948,
2579.444903486481,
2545.779751971833,
1267.150917730179))
b_thetaiotaomicron_downsampled_one_epoch = proportional_sfs(fold_sfs(c(11395.016421153823,
5697.509294687101,
3798.3396167211836,
2848.7547698431354,
2279.0038585801676,
1899.1699154494872,
1627.8599542022703,
1424.377481668122,
1266.113334959331,
1139.5020163371091,
1035.910936328398,
949.5850352831061,
876.5400411349472,
813.9300452646684,
759.6680480177727,
712.188799653274,
670.2953444866343,
633.0567169853921,
599.7379443605873)))
b_thetaiotaomicron_downsampled_two_epoch = proportional_sfs(fold_sfs(c(8664.919870727774,
5410.886429304165,
3793.1174736529974,
2881.691449665706,
2313.2722795865775,
1929.5172163186119,
1654.2900929663722,
1447.6034828585334,
1286.7826375194118,
1158.1101597985346,
1052.828809778185,
965.0934105406639,
890.8555390240017,
827.2230241899715,
772.0748319217155,
723.820160327517,
681.2425076585495,
643.3957044905935,
609.5327746634593)))
b_thetaiotaomicron_downsampled_exponential = proportional_sfs(fold_sfs(c(10187.526135309816,
5227.044599884645,
3563.621850201483,
2727.3004953552727,
2222.9082682087164,
1885.0050092572908,
1642.5279426703821,
1459.8676681937545,
1317.1988255364213,
1202.6013280281009,
1108.4741630743192,
1029.739855850399,
962.8763478354583,
905.3630546950819,
855.3480686875307,
811.4398933124559,
772.5725127938603,
737.9153260169305,
706.8114463671081)))
b_thetaiotaomicron_downsampled_bottleneck = proportional_sfs(fold_sfs(c(8717.037555032524,
5310.474345322664,
3748.8643888138054,
2873.723809926384,
2321.016005698025,
1942.9554470128837,
1669.1777593196819,
1462.2643030012487,
1300.6200461207936,
1170.9684986786854,
1064.7251166497713,
976.1057198156356,
901.0770666862816,
836.7441818986339,
780.9769787756552,
732.174217565379,
689.1094802578586,
650.8278440587161,
616.5748554746294)))
b_thetaiotaomicron_downsampled_three_epoch = proportional_sfs(fold_sfs(c(8689.269010159136,
5417.315212120648,
3793.8944085777216,
2881.1151931885984,
2312.4701639083023,
1928.7523709984505,
1653.6077971646323,
1446.9991763032233,
1286.2435100988198,
1157.6244240487513,
1052.3870965152491,
964.6884724782393,
890.4817416585565,
826.8759246652239,
771.7508719243848,
723.5164477365333,
680.9566604946273,
643.1257377201415,
609.2770166692798)))
b_thetaiotaomicron_downsampled_x_axis = 1:length(b_thetaiotaomicron_downsampled_one_epoch)
b_thetaiotaomicron_downsampled_df = data.frame(b_thetaiotaomicron_downsampled_empirical,
b_thetaiotaomicron_downsampled_two_epoch,
b_thetaiotaomicron_downsampled_one_epoch,
b_thetaiotaomicron_downsampled_x_axis)
names(b_thetaiotaomicron_downsampled_df) = c('Observed',
'Expected under two-epoch demography',
'Null expectation, i.e., standard neutral model',
'x_axis')
p_b_thetaiotaomicron_downsampled_comparison <- ggplot(data = melt(b_thetaiotaomicron_downsampled_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
scale_x_continuous(name='Minor Allele Frequency in Sample', breaks=b_thetaiotaomicron_downsampled_x_axis, limits=c(1.5, length(b_thetaiotaomicron_downsampled_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron Site Frequency Spectrum, Downsampled to 20 samples') +
ylim(0, 0.25) +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("darkslateblue", "darkslategrey", "darkturquoise"))
p_b_thetaiotaomicron_downsampled_comparison
b_thetaiotaomicron_downsampled_small_df = data.frame(b_thetaiotaomicron_downsampled_empirical,
b_thetaiotaomicron_downsampled_one_epoch,
b_thetaiotaomicron_downsampled_two_epoch,
b_thetaiotaomicron_downsampled_x_axis)
names(b_thetaiotaomicron_downsampled_small_df) = c('Empirical',
'One-epoch',
'Two-epoch',
'x_axis')
b_thetaiotaomicron_downsampled_one_epoch_delta = abs(b_thetaiotaomicron_downsampled_empirical - b_thetaiotaomicron_downsampled_one_epoch)
b_thetaiotaomicron_downsampled_two_epoch_delta = abs(b_thetaiotaomicron_downsampled_empirical - b_thetaiotaomicron_downsampled_two_epoch)
b_thetaiotaomicron_downsampled_delta_df = data.frame(b_thetaiotaomicron_downsampled_one_epoch_delta,
b_thetaiotaomicron_downsampled_two_epoch_delta,
b_thetaiotaomicron_downsampled_x_axis)
names(b_thetaiotaomicron_downsampled_delta_df) = c('One-epoch Delta',
'Two-epoch Delta',
'x_axis')
p_b_thetaiotaomicron_downsampled_delta <- ggplot(data = melt(b_thetaiotaomicron_downsampled_delta_df, id='x_axis'),
aes(x=x_axis,
y=value,
fill=variable)) +
geom_line(aes(color=variable)) +
labs(x = "", fill = "Demographic Model") +
scale_x_continuous(name='Frequency in Sample', breaks=b_thetaiotaomicron_downsampled_x_axis, limits=c(1.5, length(b_thetaiotaomicron_downsampled_x_axis) + 0.5)) +
ggtitle('B. Thetaiotaomicron (Downsampled to 20)') +
ylab('Absolute difference in proportional frequency') +
geom_text(aes(label = paste0("One-Epoch Delta Sum = ", sum(b_thetaiotaomicron_downsampled_one_epoch_delta)),
x = (9),
y = 0.0025)) +
geom_text(aes(label = paste0("Two-Epoch Delta Sum = ", sum(b_thetaiotaomicron_downsampled_two_epoch_delta)),
x = (9),
y = 0.0015))
p_b_thetaiotaomicron_downsampled_delta
input_csv = read.csv('temp_output.txt', header=FALSE)
names(input_csv) = c('likelihood', 'nu', 'tau')
plot = ggplot(data=input_csv, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
plot
input_csv_2 = read.csv('temp_output_2.txt', header=FALSE)
names(input_csv_2) = c('likelihood', 'nu', 'tau')
input_csv_2[input_csv_2$likelihood < -150, ]$likelihood = -150
plot_2 = ggplot(data=input_csv_2, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
plot_2
input_csv_3 = read.csv('./temp_output/b_thetaiotaomicron_scatter.txt', header=FALSE)
names(input_csv_3) = c('likelihood', 'nu', 'tau')
# input_csv_2[input_csv_2$likelihood < -150, ]$likelihood = -150
input_csv_4 = read.csv('temp_output_4.txt', header=FALSE)
names(input_csv_4) = c('likelihood', 'nu', 'tau')
# input_csv_2[input_csv_2$likelihood < -150, ]$likelihood = -150
input_csv_5 = read.csv('temp_output_5.txt', header=FALSE)
names(input_csv_5) = c('likelihood', 'nu', 'tau')
# input_csv_2[input_csv_2$likelihood < -150, ]$likelihood = -150
input_csv_6 = read.csv('temp_output_6.txt', header=FALSE)
names(input_csv_6) = c('likelihood', 'nu', 'tau')
# input_csv_2[input_csv_2$likelihood < -150, ]$likelihood = -150
scatter_b_thetaiotaomicron = ggplot(data=input_csv_3, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_xylanisolvens = ggplot(data=input_csv_4, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_intestinihominis = ggplot(data=input_csv_5, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_p_distasonis = ggplot(data=input_csv_6, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
input_csv_3 = read.csv('./temp_output/b_thetaiotaomicron_scatter.txt', header=FALSE)
input_csv_3 = read.csv('temp_output/b_thetaiotaomicron_scatter.txt', header=FALSE)
input_csv_3 = read.csv('temp_output/b_thetaiotaomicron_scatter.txt', header=FALSE)
names(input_csv_3) = c('likelihood', 'nu', 'tau')
input_csv_4 = read.csv('temp_output/b_xylanisolvens_scatter.txt', header=FALSE)
names(input_csv_4) = c('likelihood', 'nu', 'tau')
input_csv_5 = read.csv('temp_output/b_intestinihominis_scatter.txt', header=FALSE)
names(input_csv_5) = c('likelihood', 'nu', 'tau')
input_csv_6 = read.csv('temp_output/p_distasonis_scatter.txt', header=FALSE)
names(input_csv_6) = c('likelihood', 'nu', 'tau')
scatter_b_thetaiotaomicron = ggplot(data=input_csv_3, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_thetaiotaomicron
scatter_b_xylanisolvens = ggplot(data=input_csv_4, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_xylanisolvens
scatter_b_intestinihominis = ggplot(data=input_csv_5, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_intestinihominis
scatter_p_distasonis
scatter_p_distasonis = ggplot(data=input_csv_6, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_p_distasonis
input_csv_3 = read.csv('temp_output/b_thetaiotaomicron_scatter.txt', header=FALSE)
names(input_csv_3) = c('likelihood', 'nu', 'tau')
input_csv_3[input_csv_3$likelihood < -150, ]$likelihood = -150
input_csv_4 = read.csv('temp_output/b_xylanisolvens_scatter.txt', header=FALSE)
names(input_csv_4) = c('likelihood', 'nu', 'tau')
input_csv_4[input_csv_4$likelihood < -150, ]$likelihood = -150
input_csv_5 = read.csv('temp_output/b_intestinihominis_scatter.txt', header=FALSE)
names(input_csv_5) = c('likelihood', 'nu', 'tau')
input_csv_5[input_csv_5$likelihood < -150, ]$likelihood = -150
input_csv_6 = read.csv('temp_output/p_distasonis_scatter.txt', header=FALSE)
names(input_csv_6) = c('likelihood', 'nu', 'tau')
input_csv_6[input_csv_6$likelihood < -150, ]$likelihood = -150
scatter_b_thetaiotaomicron = ggplot(data=input_csv_3, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_thetaiotaomicron
scatter_b_xylanisolvens = ggplot(data=input_csv_4, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_xylanisolvens
scatter_b_intestinihominis = ggplot(data=input_csv_5, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_b_intestinihominis
scatter_p_distasonis = ggplot(data=input_csv_6, aes(x=nu, y=tau)) +
geom_point(aes(color=likelihood)) +
scale_fill_brewer(palette = "Accent") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
scatter_p_distasonis
