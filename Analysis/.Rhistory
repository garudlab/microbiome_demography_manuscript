demographic_contraction = data.frame(two_epoch_demographic_contraction, exponential_demographic_contraction, Name)
ggplot(demographic_contraction, aes(x=two_epoch_demographic_contraction, y=exponential_demographic_contraction, color=Name)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
xlim(0, 1) +
ylim(0, 1) +
xlab('Two Epoch magnitude of demographic contraction') +
ylab('Exponential Model magnitude of demographic contraction') +
ggtitle('Magnitude of contraction across different demographic')
ggplot(exponential_data, aes(x=exponential_time, y=exponential_demographic_contraction, color=Name)) +
geom_point(size=2) +
geom_text_repel(label=Name, size=6) +
theme(text = element_text(size=20)) +
theme(legend.position = "none") +
xlab("Years since Demographic Contraction") +
ylab("Ratio of Current to Ancestral Population Size") +
ylim(0, 0.01) +
xlim(0, 25000) +
# scale_x_continuous(labels = function(x) format(x, scientific = TRUE)) +
ggtitle('Exponential Demographic Model') +
geom_rect(xmin = 10000,
xmax = 20000,
ymin = - Inf,
ymax = Inf,
fill = alpha('green', 0.01),
linetype ='blank')
ggplot(bottlegrowth_data, aes(x=bottlegrowth_time, y=bottlegrowth_demographic_contraction, color=Name)) +
geom_point(size=2) +
geom_text_repel(label=Name, size=6) +
theme(text = element_text(size=20)) +
theme(legend.position = "none") +
xlab("Years since Demographic Contraction") +
ylab("Ratio of Current to Ancestral Population Size") +
ylim(0, 0.01) +
xlim(0, 25000) +
# scale_x_continuous(labels = function(x) format(x, scientific = TRUE)) +  ggtitle('Bottlegrowth Demographic Model') +
ggtitle('Bottledecay Demographic Model') +
geom_rect(xmin = 10000,
xmax = 20000,
ymin = - Inf,
ymax = Inf,
fill = alpha('green', 0.01),
linetype ='blank')
ggplot(three_epoch_data, aes(x=three_epoch_time, y=three_epoch_demographic_contraction, color=Name)) +
geom_point(size=2) +
geom_text_repel(label=Name, size=6) +
theme(text = element_text(size=20)) +
theme(legend.position = "none") +
xlab("Years since Demographic Contraction") +
ylab("Ratio of Current to Ancestral Population Size") +
ylim(0, 0.01) +
xlim(0, 25000) +
# scale_x_continuous(labels = function(x) format(x, scientific = TRUE)) +  ggtitle('Three Epoch Demographic Model') +
ggtitle('Three Epoch Demographic Model') +
geom_rect(xmin = 10000,
xmax = 20000,
ymin = - Inf,
ymax = Inf,
fill = alpha('green', 0.01),
linetype ='blank')
two_epoch_data$model='Two epoch'
colnames(two_epoch_data) = c('time', 'demographic_contraction', 'Species', 'Model')
exponential_data$model='Exponential Decay'
colnames(exponential_data) = c('time', 'demographic_contraction', 'Species', 'Model')
bottlegrowth_data$model='Bottlegrowth'
colnames(bottlegrowth_data) = c('time', 'demographic_contraction', 'Species', 'Model')
three_epoch_data$model='Three epoch'
colnames(three_epoch_data) = c('time', 'demographic_contraction', 'Species', 'Model')
demographic_data = data.frame(rbind(two_epoch_data, exponential_data, bottlegrowth_data, three_epoch_data))
ggplot(demographic_data, aes(x=time, y=demographic_contraction, color=Model)) +
geom_point(size=2) +
# geom_text_repel(label=Name, size=6) +
theme(text = element_text(size=20)) +
# theme(legend.position = "none") +
xlab("Years since Demographic Contraction") +
ylab("Ratio of Current to Ancestral Population Size") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE)) +
ggtitle('Summary of Demographic Models by Model')
ggplot(demographic_data, aes(x=time, y=demographic_contraction, color=Species)) +
geom_point(size=2) +
# geom_text_repel(label=Name, size=6) +
theme(text = element_text(size=20)) +
# theme(legend.position = "none") +
xlab("Years since Demographic Contraction") +
ylab("Ratio of Current to Ancestral Population Size") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE)) +
ggtitle('Summary of Demographic Models by Species')
# Pi comparison
pi_summary_df = data.frame(read.csv('summarized_pi.csv', header=TRUE))
names(pi_summary_df) = c('species', 'Cohort', 'average_pi', 'num_sites',
'num_samples', 'aggregate_across_pi', 'pairwise_across_pi')
# pi_summary_df$num_samples * pi_summary_df$across_pi
# actual_across_pi = pi_summary_df$num_samples * pi_summary_df$across_pi
# pi_summary_df$across_pi = actual_across_pi
# pi_summary_df
# write.csv(pi_summary_df, './summarized_pi_fixed.csv', row.names=FALSE)
# write.csv(Your DataFrame,"Path to export the DataFrame\\File Name.csv", row.names = FALSE)
overlapping_list = c('Akkermansia_muciniphila_55290',
'Alistipes_finegoldii_56071',
'Alistipes_onderdonkii_55464',
'Alistipes_putredinis_61533',
'Alistipes_senegalensis_58364',
'Alistipes_shahii_62199',
'Anaerostipes_hadrus_55206',
'Bacteroides_caccae_53434',
'Bacteroides_finegoldii_57739',
'Bacteroides_fragilis_54507',
'Bacteroides_thetaiotaomicron_56941',
'Bacteroides_uniformis_57318',
'Bacteroides_vulgatus_57955',
'Bacteroides_xylanisolvens_57185'	,
'Barnesiella_intestinihominis_62208',
'Bifidobacterium_longum_57796',
'Bifidobacterium_pseudocatenulatum_57754',
'Bilophila_wadsworthia_57364',
'Blautia_wexlerae_56130',
'Butyricimonas_virosa_58742',
'Butyrivibrio_crossotus_61674',
'Clostridiales_bacterium_56470',
'Clostridiales_bacterium_61057',
'Clostridium_sp_61482',
'Collinsella_sp_62205',
'Coprococcus_sp_62244',
'Dialister_invisus_61905',
'Dorea_longicatena_59913',
'Dorea_longicatena_61473',
'Escherichia_coli_58110',
'Eubacterium_eligens_61678',
'Eubacterium_hallii_61477',
'Eubacterium_ramulus_59802',
'Eubacterium_rectale_56927',
'Eubacterium_siraeum_57634',
'Faecalibacterium_cf_62236',
'Faecalibacterium_prausnitzii_57453',
'Faecalibacterium_prausnitzii_61481',
'Faecalibacterium_prausnitzii_62201',
'Guyana_massiliensis_60772',
'Haemophilus_parainfluenzae_62356',
'Intestinimonas_butyriciproducens_60001',
'Odoribacter_splanchnicus_62174',
'Oscillibacter_sp_60799',
'Parabacteroides_distasonis_56985',
'Parabacteroides_merdae_56972',
'Phascolarctobacterium_sp_59817',
'Phascolarctobacterium_succinatutens_61948',
'Prevotella_copri_61740',
'Roseburia_hominis_61877',
'Roseburia_intestinalis_56239',
'Roseburia_inulinivorans_61943',
'Ruminococcus_bicirculans_59300',
'Ruminococcus_bromii_62047',
'Ruminococcus_gnavus_57638',
'Ruminococcus_lactaris_55568',
'Ruminococcus_obeum_61472',
'Ruminococcus_sp_55468',
'Ruminococcus_torques_62045',
'Sutterella_wadsworthensis_56828',
'Veillonella_atypica_58169',
'Veillonella_dispar_61763',
'Veillonella_parvula_57794')
list_over_20 = c('Eubacterium_eligens_61678',
'Faecalibacterium_cf_62236',
'Faecalibacterium_prausnitzii_57453',
'Faecalibacterium_prausnitzii_61481',
'Faecalibacterium_prausnitzii_62201',
'Oscillibacter_sp_60799',
'Prevotella_copri_61740',
'Roseburia_inulinivorans_61943',
'Ruminococcus_bromii_62047',
'Ruminococcus_torques_62045')
list_over_10 = c('Bifidobacterium_longum_57796',
'Blautia_wexlerae_56130',
'Butyrivibrio_crossotus_61674',
'Clostridium_sp_61482',
'Escherichia_coli_58110',
'Eubacterium_eligens_61678',
'Faecalibacterium_cf_62236',
'Faecalibacterium_prausnitzii_57453',
'Faecalibacterium_prausnitzii_61481',
'Faecalibacterium_prausnitzii_62201',
'Oscillibacter_sp_60799',
'Prevotella_copri_61740',
'Roseburia_inulinivorans_61943',
'Ruminococcus_bromii_62047',
'Ruminococcus_torques_62045')
over_20_df = subset(pi_summary_df,
species %in% list_over_20)
species_labels_20 = c('E. eligens',
'F. cf',
'F. prausnitzii (57453)',
'F. prausnitzii (61481)',
'F. prausnitzii (62201)',
'O. sp',
'P. copri',
'R. inulinivorans',
'R. bromii',
'R. torques')
species_labels_10 = c('B. longum',
'B. wexlerae',
'B. crossotus',
'C. sp',
'E. coli',
'E. eligens',
'F. cf',
'F. prausnitzii (57453)',
'F. prausnitzii (61481)',
'F. prausnitzii (62201)',
'O. sp',
'P. copri',
'R. inulinivorans',
'R. bromii',
'R. torques')
over_10_df = subset(pi_summary_df,
species %in% list_over_10)
# Aggregate
aggregate_pi_comparison_20 <- ggplot(data=over_20_df, aes(x=species, y=average_pi, fill=Cohort)) +
geom_boxplot(position=position_dodge(width=1)) +
geom_point(aes(x=species, y=aggregate_across_pi, color=Cohort), size=3, shape=18) +
theme(axis.text.x = element_text(angle=50, vjust=1.0, hjust=1)) +
scale_shape_manual(values = c(21:23)) +
stat_compare_means(label = "p.signif", method = "t.test") +
scale_x_discrete(breaks=list_over_20) +
guides(fill=guide_legend(title="Cohort")) +
ggtitle('Pi within hosts and aggregated across hosts, Minimum #samples >= 20') +
xlab('Species') +
ylab('Average within-host pi') +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
aggregate_pi_comparison_20
position_jitterdodge(
jitter.width = NULL,
jitter.height = 0,
dodge.width = 0.5,
seed = NA
)
better_pi_comparison_20 <- ggplot(data=over_20_df, aes(x=species, y=average_pi, fill=Cohort)) +
geom_boxplot(aes(fill=Cohort), outlier.shape=NA) +
geom_point(pch = 21, position = position_jitterdodge(), size=1.5) +
geom_point(aes(x=species, y=aggregate_across_pi, color=Cohort), size=4, shape=18, position=position_dodge(width=0.75)) +
theme_bw() +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(angle=90, vjust=1.0, hjust=1)) +
xlab('Species') +
ylab('Average within-host pi') +
ggtitle('Pi within hosts and aggregated across hosts, Minimum #samples >= 20')
better_pi_comparison_20
temp = subset(over_20_df, Cohort==" African", select=c(species, Cohort, average_pi, num_sites, num_samples, aggregate_across_pi, pairwise_across_pi))
temp$aggregate_across_pi = temp$aggregate_across_pi / 2
better_pi_comparison_20 <- ggplot(data=temp, aes(x=species, y=average_pi, fill=Cohort)) +
geom_boxplot(aes(fill=Cohort), outlier.shape=NA) +
geom_point(pch = 21, position = position_jitterdodge(), size=1.5) +
geom_point(aes(x=species, y=aggregate_across_pi, color=Cohort), size=4, shape=18, position=position_dodge(width=0.75)) +
theme_bw() +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(angle=90, vjust=1.0, hjust=1)) +
xlab('Species') +
ylab('Average within-host pi') +
ggtitle('Pi within hosts and aggregated across hosts, Minimum #samples >= 20')
better_pi_comparison_20
aggregate_pi_comparison_10 <- ggplot(data=over_10_df, aes(x=species, y=average_pi, fill=cohort)) +
geom_boxplot(position=position_dodge(width=1)) +
# geom_point(position=position_dodge(width=0.75),aes(group=cohort), size=1) +
# geom_jitter(aes(color=cohort), size=0.2) +
geom_point(aes(x=species, y=aggregate_across_pi, color=cohort), size=3, shape=18) +
theme(axis.text.x = element_text(angle=50, vjust=1.0, hjust=1)) +
scale_shape_manual(values = c(21:23)) +
stat_compare_means(label = "p.signif", method = "t.test") +
scale_x_discrete(breaks=list_over_10,
labels=species_labels_10) +
guides(fill=guide_legend(title="Cohort")) +
ggtitle('Pi within hosts and aggregated across hosts, Minimum #samples >= 10') +
xlab('Species') +
ylab('Average within-host pi')
aggregate_pi_comparison_10
better_pi_comparison_10 <- ggplot(data=over_10_df, aes(x=species, y=average_pi, fill=Cohort)) +
geom_boxplot(aes(fill=Cohort), outlier.shape=NA) +
geom_point(pch = 21, position = position_jitterdodge(), size=1.5) +
geom_point(aes(x=species, y=aggregate_across_pi, color=Cohort), size=4, shape=18, position=position_dodge(width=0.75)) +
theme_bw() +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(angle=90, vjust=1.0, hjust=1)) +
xlab('Species') +
ylab('Average within-host pi') +
ggtitle('Pi within hosts and aggregated across hosts, Minimum #samples >= 10')
better_pi_comparison_10
# Pairwise
pairwise_pi_comparison_20 <- ggplot(data=over_20_df, aes(x=species, y=average_pi, fill=Cohort)) +
geom_boxplot(position=position_dodge(width=1)) +
# geom_point(position=position_dodge(width=0.75),aes(group=cohort), size=1) +
# geom_jitter(aes(color=cohort), size=0.2) +
geom_point(aes(x=species, y=pairwise_across_pi, color=Cohort), size=3, shape=18) +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1)) +
scale_shape_manual(values = c(21:23))  +
stat_compare_means(label = "p.signif", method = "t.test") +
ggtitle('Pi within hosts and distributed across hosts, Minimum #samples >= 10') +
xlab('Species') +
ylab('Average within-host pi')
pairwise_pi_comparison_20
pairwise_pi_comparison_10 <- ggplot(data=over_10_df, aes(x=species, y=average_pi, fill=cohort)) +
geom_boxplot(position=position_dodge(width=1)) +
# geom_point(position=position_dodge(width=0.75),aes(group=cohort), size=1) +
# geom_jitter(aes(color=cohort), size=0.2) +
geom_point(aes(x=species, y=pairwise_across_pi, color=cohort), size=3, shape=18) +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1)) +
scale_shape_manual(values = c(21:23)) +
stat_compare_means(label = "p.signif", method = "t.test") +
ggtitle('Pi within hosts and distributed across hosts, Minimum #samples >= 10') +
xlab('Species') +
ylab('Average within-host pi')
pairwise_pi_comparison_20 <- ggplot(data=over_20_df, aes(x=species, y=average_pi, fill=cohort)) +
geom_boxplot(position=position_dodge(width=1)) +
# geom_point(position=position_dodge(width=0.75),aes(group=cohort), size=1) +
# geom_jitter(aes(color=cohort), size=0.2) +
# geom_point(aes(x=species, y=pairwise_across_pi, color=cohort), size=3, shape=18) +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1)) +
scale_shape_manual(values = c(21:23))  +
stat_compare_means(label = "p.signif", method = "t.test") +
ggtitle('Pi within hosts, Minimum #samples >= 20') +
xlab('Species') +
ylab('Average within-host pi') +
scale_x_discrete(breaks=unique(over_20_df$species), labels=c('E. eligens', 'F. cf', 'F. prausnitzii1 ',
'F. prausnitzii 2', 'F. prausnitzii 3',
'O. sp', 'P. copri', 'R. inulinivorans',
'R. bromii', 'R. torques'))
pairwise_pi_comparison_20
pairwise_pi_comparison_10 + stat_compare_means(label = "p.signif", method = "t.test")
across_host_pi_comparison_10 <- ggplot(data=over_10_df, aes(x=aggregate_across_pi, y=pairwise_across_pi, color=cohort)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
xlab('Aggregate across-host pi') +
ylab('Pairwise distributed across-host pi')
across_host_pi_comparison_10
# aggregate across host pi
aggregate_over_10 = over_10_df[c('species', 'cohort', 'aggregate_across_pi')]
aggregate_over_10 = distinct(aggregate_over_10)
aggregate_HMP_over_10 = aggregate_over_10[aggregate_over_10$cohort==' HMP', ]
aggregate_African_over_10 = aggregate_over_10[aggregate_over_10$cohort==' African', ]
aggregate_over_10 = rbind(aggregate_African_over_10, aggregate_HMP_over_10)
# cohort aggregate_comparison
cohort_aggregate_comparison <- ggpaired(data=aggregate_over_10, x='cohort', y='aggregate_across_pi', color='cohort', line.color='grey') +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1)) +
scale_shape_manual(values = c(21:23)) +
stat_compare_means(method = "t.test", paired=TRUE, label.y=0.06, label.x=1.5) +
ggtitle('Aggregate pi across hosts by cohort, Minimum #samples >= 10') +
xlab('Cohort') +
ylab('Aggregate across-host pi')
cohort_aggregate_comparison
# pairwise across host pi
pairwise_over_10 = over_10_df[c('species', 'cohort', 'pairwise_across_pi')]
pairwise_over_10 = distinct(pairwise_over_10)
pairwise_HMP_over_10 = pairwise_over_10[pairwise_over_10$cohort==' HMP', ]
pairwise_African_over_10 = pairwise_over_10[pairwise_over_10$cohort==' African', ]
pairwise_over_10 = rbind(pairwise_African_over_10, pairwise_HMP_over_10)
# cohort aggregate_comparison
cohort_pairwise_comparison <- ggpaired(data=pairwise_over_10, x='cohort', y='pairwise_across_pi', color='cohort', line.color='grey') +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1)) +
scale_shape_manual(values = c(21:23)) +
stat_compare_means(method = "t.test", paired=TRUE, label.y=0.06, label.x=1.5) +
ggtitle('Pairwise distributed pi across hosts by cohort, Minimum #samples >= 10') +
xlab('Cohort') +
ylab('Pairwise distributed across-host pi')
cohort_pairwise_comparison
# Species prevalence
species_prevalence = read.csv('../Summary/species_prevalence.txt', sep=',')
species_prevalence = data.frame(species_prevalence$species, species_prevalence$prevalence)
names(species_prevalence) = c('species', 'prevalence')
species_prevalence$prevalence=species_prevalence$prevalence-2
species_prevalence = subset(species_prevalence, prevalence > 20)
# names(species_prevalence) = c('species', 'prevalence')
ggplot(species_prevalence, aes(x = reorder(species, prevalence), y=prevalence, fill=species)) +
geom_bar(stat='identity') +
theme(legend.position = "none") +
coord_flip() +
xlab('Species') +
ylab('Prevalence') +
ggtitle('Highest Prevalence Gut Microbial Species in North American Microbiomes')
# species_prevalence = species_prevalence[species_prevalence$species_prevalence.prevalence>= 0]
rho_mu = read.csv('../Data/r_mu_dic.csv', header = FALSE)
rho_mu$significant = c('Yes', 'Yes', 'Yes', 'No', 'No',
'No', 'Yes', 'No', 'No', 'No',
'No', 'No', 'No', 'No', 'No',
'No', 'No', 'Yes', 'No', 'No',
'No', 'Yes', 'No', 'No', 'No',
'No', 'No', 'No', 'No', 'No',
'No', 'No', 'No', 'Yes', 'Yes',
'Yes', 'No', 'No', 'No', 'No',
'No')
names(rho_mu) = c('species', 'rho_ratio', 'Significant')
rho_mu_plot = ggplot(aes(x=species, y=rho_ratio), data = rho_mu) +
geom_bar(aes(fill = Significant), stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggtitle('Significance of demographic model vs. ratio of recombination to mutation') +
xlab('Species') +
ylab('Rho / mu')
rho_mu_plot
# Number of QP samples per species
species_list = c('Akkermansia_muciniphila_55200',
'Alistipes_finegoldii_56071',
'Alistipes_onderdonkii_55464',
'Alistipes_putredinis_61533',
'Alistipes_shahii_62199',
'Bacteroidales_bacterium_58650',
'Bacteroides_caccae_53434',
'Bacteroides_cellulosilyticus',
'Bacteroides_frgailis_5507',
'Bacteroides_massiliensis_44749',
'Bacteroides_ovatus_58035',
'Bacteroides_stercoris',
'Bacteroides_thetaiotaomicron_56941',
'Bacteroides_uniformis_57318',
'Bacteroides_vulgatus_57955',
'Bacteroides_xylanisolvens_57185',
'Barnesiella_intestinihominis_62208',
'Coprococcus_sp_62244',
'Dialest_invisus_61905',
'Eubacterium_eligens_61678',
'Eubacterium_rectale_56927',
'Faecalibacterium_prausnitzii_57453',
'Odoribacter_splanchnicus_62174',
'Oscillibacter_sp_60799',
'Parabacteroides_distasonis_56985',
'Parabacteroides_merdae_56972',
'Phasolarctobacterium_sp_59817',
'Prevotella_copri_61740',
'Ruminococcus_bicirculans_59300',
'Ruminococcus_bromii_62047')
num_qp_samples = c(19, 39, 53, 33, 55,
29, 31, 33, 29, 9,
47, 59, 67, 75, 49,
45, 41, 9, 33, 25,
67, 31, 31, 47, 47,
37, 21, 15, 61, 33)
qp_samples_per_species_csv =
'Akkermansia_muciniphila_55200, 19
Alistipes_finegoldii_56071, 39
Alistipes_onderdonkii_55464, 53
Alistipes_putredinis_61533, 33
Alistipes_shahii_62199, 55
Bacteroidales_bacterium_58650, 29
Bacteroides_caccae_53434, 31
Bacteroides_cellulosilyticus, 33
Bacteroides_frgailis_5507, 29
Bacteroides_massiliensis_44749, 9
Bacteroides_ovatus_58035, 47
Bacteroides_stercoris, 59
Bacteroides_thetaiotaomicron_56941, 67
Bacteroides_uniformis_57318, 75
Bacteroides_vulgatus_57955, 49
Bacteroides_xylanisolvens_57185, 45
Barnesiella_intestinihominis_62208, 41
Coprococcus_sp_62244, 9
Dialest_invisus_61905, 33
Eubacterium_eligens_61678, 25
Eubacterium_rectale_56927, 67
Faecalibacterium_prausnitzii_57453, 31
Odoribacter_splanchnicus_62174, 31
Oscillibacter_sp_60799, 47
Parabacteroides_distasonis_56985, 47
Parabacteroides_merdae_56972, 37
Phasolarctobacterium_sp_59817, 21
Prevotella_copri_61740, 15
Ruminococcus_bicirculans_59300, 61
Ruminococcus_bromii_62047, 33
'
qp_samples_per_species = data.frame(species_list, num_qp_samples)
qp_samples_per_species_plot = ggplot(aes(x=species_list, y=num_qp_samples),
data = qp_samples_per_species) +
geom_bar(stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggtitle('QP samples per species') +
xlab('Species') +
ylab('Number of QP samples')
qp_samples_per_species_plot
qp_samples_per_species_plot_ordered = ggplot(qp_samples_per_species, aes(x = reorder(species_list, -num_qp_samples), y = num_qp_samples)) +
geom_bar(stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggtitle('QP samples per species') +
xlab('Species') +
ylab('Number of QP samples')
qp_samples_per_species_plot_ordered
set.seed(1)
fold_sfs = function(input_sfs) {
input_length = length(input_sfs)
folded_length = length(input_sfs) / 2
if (input_length %% 2 == 1) {
folded_length = folded_length + 1
}
output_sfs = c()
for (i in 1:folded_length) {
output_sfs[i] = input_sfs[i] + input_sfs[input_length - i]
}
return(output_sfs)
}
proportional_sfs = function(input_sfs) {
return (input_sfs / sum(input_sfs))
}
x <- datasim
loglik <- function(theta){
k<- theta[1]
lambda<- theta[2]
out <- sum(dweibull(x,shape = k, scale=lambda, log = TRUE) )
return(out)
}
e_eligens_pi = read.csv('../Scripts/e_eligens_pi_values.txt', header=TRUE)
