melt(b_vulgatus_dfe_params),
melt(b_xylanisolvens_dfe_params),
melt(b_intestinihominis_dfe_params),
# melt(d_invisus_dfe_params),
melt(e_eligens_dfe_params),
melt(e_rectale_dfe_params),
melt(f_prausnitzii_dfe_params),
melt(o_splanchnicus_dfe_params),
melt(o_sp_dfe_params),
melt(p_distasonis_dfe_params),
melt(p_merdae_dfe_params),
melt(p_sp_dfe_params),
melt(p_copri_dfe_params),
melt(r_bicirculans_dfe_params),
melt(r_bromii_dfe_params)
)
dfe_dadi_df = rbind(
melt(a_muciniphila_dfe_dadi_params),
melt(a_finegoldii_dfe_dadi_params),
melt(a_onderdonkii_dfe_dadi_params),
melt(a_putredinis_dfe_dadi_params),
melt(a_shahii_dfe_dadi_params),
melt(b_bacterium_dfe_dadi_params),
melt(b_caccae_dfe_dadi_params),
melt(b_cellulosilyticus_dfe_dadi_params),
melt(b_fragilis_dfe_dadi_params),
# melt(b_ovatus_dfe_dadi_params),
melt(b_stercoris_dfe_dadi_params),
melt(b_thetaiotaomicron_dfe_dadi_params),
# melt(b_uniformis_dfe_dadi_params),
melt(b_vulgatus_dfe_dadi_params),
melt(b_xylanisolvens_dfe_dadi_params),
melt(b_intestinihominis_dfe_dadi_params),
# melt(d_invisus_dfe_dadi_params),
melt(e_eligens_dfe_dadi_params),
melt(e_rectale_dfe_dadi_params),
melt(f_prausnitzii_dfe_dadi_params),
melt(o_splanchnicus_dfe_dadi_params),
melt(o_sp_dfe_dadi_params),
melt(p_distasonis_dfe_dadi_params),
melt(p_merdae_dfe_dadi_params),
melt(p_sp_dfe_dadi_params),
melt(p_copri_dfe_dadi_params),
melt(r_bicirculans_dfe_dadi_params),
melt(r_bromii_dfe_dadi_params)
)
# dfe_df
## Due to Dadi internal scaling which considers genotype
## fitness as (1, 1 + 2sh, 1 + 2s), and the fact that
## we are working with a haploid sample, we
## wish to multiply the _inferred_ s by 2 to get the true
## selective coefficient of the haploid bacteria.
## However, s is for the heterozygote case.
phylogenetic_levels = c(
'Akkermansia muciniphila',
'Alistipes finegoldii',
'Alistipes onderdonkii',
'Alistipes putredinis',
'Alistipes shahii',
'Bacteroidales bacterium',
'Bacteroides caccae',
'Bacteroides cellulosilyticus',
'Bacteroides fragilis',
# 'Bacteroides ovatus',
'Bacteroides stercoris',
'Bacteroides thetaiotaomicron',
# 'Bacteroides uniformis',
'Bacteroides vulgatus',
'Bacteroides xylanisolvens',
'Barnesiella intestinihominis',
'Odoribacter splanchnicus',
'Parabacteroides distasonis',
'Parabacteroides merdae',
'Prevotella copri',
'Eubacterium eligens',
'Eubacterium rectale',
'Faecalibacterium prausnitzii',
'Ruminococcus bicirculans',
'Ruminococcus bromii',
'Oscillibacter species',
# 'Dialister invisus',
'Phascolarctobacterium species')
phylogenetic_levels = c(
'Bacteroidales bacterium',
'Alistipes putredinis',
'Alistipes finegoldii',
'Alistipes onderdonkii',
'Alistipes shahii',
'Odoribacter splanchnicus',
'Parabacteroides distasonis',
'Parabacteroides merdae',
'Prevotella copri',
'Bacteroides fragilis',
'Bacteroides cellulosilyticus',
'Bacteroides stercoris',
# 'Bacteroides uniformis',
'Bacteroides thetaiotaomicron',
# 'Bacteroides ovatus',
'Bacteroides xylanisolvens',
'Bacteroides caccae',
# 'Bacteroides massiliensis',
'Bacteroides vulgatus',
'Barnesiella intestinihominis',
'Akkermansia muciniphila',
# 'Dialister invivus',
'Phascolarctobacterium species',
'Eubacterium eligens',
'Eubacterium rectale',
# 'Coprococcus species',
'Oscillibacter species',
'Ruminococcus bromii',
'Ruminococcus bicirculans',
'Faecalibacterium prausnitzii'
)
dfe_df$species = factor(dfe_df$species, levels=phylogenetic_levels)
dfe_dadi_df$species = factor(dfe_dadi_df$species, levels=phylogenetic_levels)
# dfe_df$value = dfe_df$value * 2
dfe_df$value[dfe_df$value <= 1e-12] = 1e-12
dfe_df$value[dfe_df$value >= 1] = 1
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'gamma_dfe_dist_high', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=6.93E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'neugamma_dfe_dist_low', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Neutral + Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_df[dfe_df$variable == 'neugamma_dfe_dist_high', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Neutral + Gamma-Distributed DFE',
subtitle = 'Assuming a mutation rate of mu=6.93E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
dfe_dadi_df$value[dfe_dadi_df$value <= 1e-1] = 1e-1
ggplot(dfe_dadi_df[dfe_dadi_df$variable == 'gamma_dfe_dist', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Gamma-Distributed DFE',
subtitle = 'Selective effect multiplied by N_anc'
) +
theme_ridges() +
scale_x_log10() +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
ggplot(dfe_dadi_df[dfe_dadi_df$variable == 'neugamma_dfe_dist', ], aes(x=value, y=fct_rev(species), fill=species)) +
geom_density_ridges2(aes(fill = species), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Neutral + Gamma-Distributed DFE',
subtitle = 'Selective effect multiplied by 2N_anc'
) +
theme_ridges() +
scale_x_log10() +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect')
a_shahii_dfe_df = melt(a_shahii_dfe_params)
# a_shahii_dfe_df$value = a_shahii_dfe_df$value * 2
a_shahii_dfe_df$value[a_shahii_dfe_df$value <= 1e-12] = 1e-12
a_shahii_dfe_df$value[a_shahii_dfe_df$value >= 1] = 1
# a_shahii_dfe_df = a_shahii_dfe_df[a_shahii_dfe_df$variable == 'gamma_dfe_dist_low' || a_shahii_dfe_df$variable == 'neugamma_dfe_dist_low', ]
a_shahii_dfe_df = rbind(
a_shahii_dfe_df[a_shahii_dfe_df$variable == 'gamma_dfe_dist_low', ],
a_shahii_dfe_df[a_shahii_dfe_df$variable == 'neugamma_dfe_dist_low',])
a_shahii_dfe_df$variable <- as.character(a_shahii_dfe_df$variable)
a_shahii_dfe_df$variable[a_shahii_dfe_df$variable == 'neugamma_dfe_dist_low'] <- 'Neutral + Gamma-Distributed DFE'
a_shahii_dfe_df$variable[a_shahii_dfe_df$variable == 'gamma_dfe_dist_low'] <- 'Gamma-Distributed DFE'
ggplot(a_shahii_dfe_df, aes(x=value, y=fct_rev(variable), fill=variable)) +
geom_density_ridges2(aes(fill = variable), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Alistipes shahii DFE Comparison',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10() +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect') +
scale_fill_manual(values=c("goldenrod1", "yellow2"))
o_splanchnicus_dfe_df = melt(o_splanchnicus_dfe_params)
# o_splanchnicus_dfe_df$value = o_splanchnicus_dfe_df$value * 2
o_splanchnicus_dfe_df$value[o_splanchnicus_dfe_df$value <= 1e-12] = 1e-12
o_splanchnicus_dfe_df$value[o_splanchnicus_dfe_df$value >= 1] = 1
# o_splanchnicus_dfe_df = o_splanchnicus_dfe_df[o_splanchnicus_dfe_df$variable == 'gamma_dfe_dist_low' || o_splanchnicus_dfe_df$variable == 'neugamma_dfe_dist_low', ]
o_splanchnicus_dfe_df = rbind(
o_splanchnicus_dfe_df[o_splanchnicus_dfe_df$variable == 'gamma_dfe_dist_low', ],
o_splanchnicus_dfe_df[o_splanchnicus_dfe_df$variable == 'neugamma_dfe_dist_low',])
o_splanchnicus_dfe_df$variable <- as.character(o_splanchnicus_dfe_df$variable)
o_splanchnicus_dfe_df$variable[o_splanchnicus_dfe_df$variable == 'neugamma_dfe_dist_low'] <- 'Neutral + Gamma-Distributed DFE'
o_splanchnicus_dfe_df$variable[o_splanchnicus_dfe_df$variable == 'gamma_dfe_dist_low'] <- 'Gamma-Distributed DFE'
o_splanchnicus_dfe_figure = ggplot(o_splanchnicus_dfe_df, aes(x=value, y=fct_rev(variable), fill=variable)) +
geom_density_ridges2(aes(fill = variable), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Odoribacter splanchnicus DFE Comparison',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect') +
scale_fill_manual(values=c("goldenrod1", "yellow2"))
e_eligens_dfe_df = melt(e_eligens_dfe_params)
# e_eligens_dfe_df$value = e_eligens_dfe_df$value * 2
e_eligens_dfe_df$value[e_eligens_dfe_df$value <= 1e-12] = 1e-12
e_eligens_dfe_df$value[e_eligens_dfe_df$value >= 1] = 1
# e_eligens_dfe_df = e_eligens_dfe_df[e_eligens_dfe_df$variable == 'gamma_dfe_dist_low' || e_eligens_dfe_df$variable == 'neugamma_dfe_dist_low', ]
e_eligens_dfe_df = rbind(
e_eligens_dfe_df[e_eligens_dfe_df$variable == 'gamma_dfe_dist_low', ],
e_eligens_dfe_df[e_eligens_dfe_df$variable == 'neugamma_dfe_dist_low',])
e_eligens_dfe_df$variable <- as.character(e_eligens_dfe_df$variable)
e_eligens_dfe_df$variable[e_eligens_dfe_df$variable == 'neugamma_dfe_dist_low'] <- 'Neutral + Gamma-Distributed DFE'
e_eligens_dfe_df$variable[e_eligens_dfe_df$variable == 'gamma_dfe_dist_low'] <- 'Gamma-Distributed DFE'
e_eligens_dfe_figure = ggplot(e_eligens_dfe_df, aes(x=value, y=fct_rev(variable), fill=variable)) +
geom_density_ridges2(aes(fill = variable), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Eubacterium eligens DFE Comparison',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect') +
scale_fill_manual(values=c("goldenrod1", "yellow2"))
b_cellulosilyticus_dfe_df = melt(b_cellulosilyticus_dfe_params)
b_cellulosilyticus_dfe_df$value[b_cellulosilyticus_dfe_df$value <= 1e-12] = 1e-12
b_cellulosilyticus_dfe_df$value[b_cellulosilyticus_dfe_df$value >= 1] = 1
# b_cellulosilyticus_dfe_df = b_cellulosilyticus_dfe_df[b_cellulosilyticus_dfe_df$variable == 'gamma_dfe_dist_low' || b_cellulosilyticus_dfe_df$variable == 'neugamma_dfe_dist_low', ]
b_cellulosilyticus_dfe_df = rbind(
b_cellulosilyticus_dfe_df[b_cellulosilyticus_dfe_df$variable == 'gamma_dfe_dist_low', ],
b_cellulosilyticus_dfe_df[b_cellulosilyticus_dfe_df$variable == 'neugamma_dfe_dist_low',])
b_cellulosilyticus_dfe_df$variable <- as.character(b_cellulosilyticus_dfe_df$variable)
b_cellulosilyticus_dfe_df$variable[b_cellulosilyticus_dfe_df$variable == 'neugamma_dfe_dist_low'] <- 'Neutral + Gamma-Distributed DFE'
b_cellulosilyticus_dfe_df$variable[b_cellulosilyticus_dfe_df$variable == 'gamma_dfe_dist_low'] <- 'Gamma-Distributed DFE'
b_cellulosilyticus_dfe_figure = ggplot(b_cellulosilyticus_dfe_df, aes(x=value, y=fct_rev(variable), fill=variable)) +
geom_density_ridges2(aes(fill = variable), stat = "binline", binwidth = 1, scale = 0.95) +
labs(
title = 'Bacteroides cellulosilyticus DFE Comparison',
subtitle = 'Assuming a mutation rate of mu=4.08E-10'
) +
theme_ridges() +
scale_x_log10(limits=c(1e-13, 1e2)) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
xlab('Selective Effect') +
scale_fill_manual(values=c("goldenrod1", "yellow2"))
o_splanchnicus_dfe_figure + e_eligens_dfe_figure + b_cellulosilyticus_dfe_figure + plot_layout(ncol = 1)
two_epoch_nu_tau = read.csv('../Summary/two_epoch_demography_interpretation.csv')
three_epoch_nu_tau= read.csv('../Summary/three_epoch_demography_interpretation.csv')
two_epoch_nu_tau = two_epoch_nu_tau[-12, ]
two_epoch_nu_tau = two_epoch_nu_tau[-6, ]
three_epoch_nu_tau = three_epoch_nu_tau[-5, ]
two_epoch_nu_tau$demography = 'Two Epoch'
three_epoch_nu_tau$demography = 'Three Epoch'
three_epoch_nu_tau = cbind(three_epoch_nu_tau$species, three_epoch_nu_tau$nu_f, three_epoch_nu_tau$time_total_low, three_epoch_nu_tau$time_total_high, three_epoch_nu_tau$demography)
colnames(three_epoch_nu_tau) = c('species', 'nu', 'time_low', 'time_high', 'demography')
demography_df =  rbind(two_epoch_nu_tau, three_epoch_nu_tau)
demography_df$time_low = as.numeric(demography_df$time_low)
demography_df$nu = as.numeric(demography_df$nu)
demography_df$species = factor(demography_df$species, levels=phylogenetic_levels)
demography_df_highlight = demography_df[demography_df$species %in% c('Odoribacter splanchnicus', 'Eubacterium eligens', 'Bacteroides cellulosilyticus'), ]
ggscatter(demography_df, x="nu", y="time_low", color="species", shape='demography', size=3) + geom_vline(xintercept=1) +
ylab('Estimated Time in Years') +
xlab('Ratio of current to ancestral population size') +
scale_shape_manual(name = "Best-Fit Demographic Model",
labels = c("Three Epoch", "Two Epoch"),
values = c(17, 19)) +
theme(legend.position="right") +
geom_text_repel(aes(label = demography_df$species, color=demography_df$species)) +
guides(color=guide_legend(title="Species")) +
scale_x_log10(limits=c(1e-1, 1e1)) +
scale_y_log10(limits=c(1e1, 1e7)) +
theme(legend.title = element_text(size=30)) +
theme(legend.text = element_text(size=12)) +
guides(color = 'none') +
guides(shape = 'none')  +
geom_point(data=demography_df_highlight, color='red', shape=1, size=6) +
# geom_point(data=demography_df_highlight, aes(x=nu, y=time_low, color='red', shape=1, size=4))  +
ggtitle('Commensal Gut Microbiota have Varied Demographic Histories') +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16,face="bold"))
# Full empirical SFS
plot_original_empirical_sfs(b_vulgatus_no_clade_control) + ggtitle('B. vulgatus full empirical SFS (unfolded with no Clade Control)') +
scale_x_continuous() +
guides(color = 'none', size = 'none', fill = 'none') +
ggtitle('Bacteroides vulgatus empirical Site-frequency Spectrum') +
xlab('Allele Frequency')
compare_hmp_sfs(b_cellulosilyticus_hmp_qp_syn, one_epoch_14, b_cellulsilyticus_complete_two_epoch, b_cellulosilyticus_complete_three_epoch, b_cellulosilyticus_hmp_qp_nonsyn, b_cellulosilyticus_complete_gamma_dfe, b_cellulosilyticus_complete_neugamma_dfe) + ggtitle('B. cellulosilyticus (Downsampled to 14)')
compare_hmp_sfs(e_eligens_hmp_qp_syn, one_epoch_14, e_eligens_complete_two_epoch, e_eligens_complete_three_epoch, e_eligens_hmp_qp_nonsyn, e_eligens_complete_gamma_dfe, e_eligens_complete_neugamma_dfe) + ggtitle('E. eligens (Downsampled to 14)')
compare_hmp_sfs(b_ovatus_hmp_qp_syn, one_epoch_14, b_ovatus_complete_two_epoch, b_ovatus_complete_three_epoch, b_ovatus_hmp_qp_nonsyn, b_ovatus_complete_gamma_dfe, b_ovatus_complete_neugamma_dfe) + ggtitle('B. ovatus (Downsampled to 14)')
x_axis = 1:length(one_epoch_14)
o_splanchnicus_best_fit = cbind(
proportional_sfs(o_splanchnicus_hmp_qp_syn[-1]),
proportional_sfs(o_splanchnicus_complete_two_epoch),
proportional_sfs(o_splanchnicus_hmp_qp_nonsyn[-1]),
proportional_sfs(o_splanchnicus_complete_gamma_dfe),
rep('O. splanchnicus', length(o_splanchnicus_hmp_qp_syn[-1])),
x_axis
)
b_cellulosilyticus_best_fit = cbind(
proportional_sfs(b_cellulosilyticus_hmp_qp_syn[-1]),
proportional_sfs(b_cellulosilyticus_complete_three_epoch),
proportional_sfs(b_cellulosilyticus_hmp_qp_nonsyn[-1]),
proportional_sfs(b_cellulosilyticus_complete_gamma_dfe),
rep('B. cellulosilyticus', length(b_cellulosilyticus_hmp_qp_syn[-1])),
x_axis
)
e_eligens_best_fit = cbind(
proportional_sfs(e_eligens_hmp_qp_syn[-1]),
proportional_sfs(e_eligens_complete_two_epoch),
proportional_sfs(e_eligens_hmp_qp_nonsyn[-1]),
proportional_sfs(e_eligens_complete_gamma_dfe),
rep('E. eligens', length(e_eligens_hmp_qp_syn[-1])),
x_axis
)
# e_eligens_best_fit$species = 'E. eligens'
colnames(e_eligens_best_fit) = c(
'Empirical Synonymous',
'Model Synonymous',
'Empirical Nonsynonymous',
'Model Nonsynonymous',
'Species',
'X.axis')
e_eligens_best_fit
o_splanchnicus_best_fit = data.frame(o_splanchnicus_best_fit)
e_eligens_best_fit = data.frame(e_eligens_best_fit)
b_cellulosilyticus_best_fit = data.frame(b_cellulosilyticus_best_fit)
colnames(o_splanchnicus_best_fit) = c(
'Empirical Synonymous',
'Model Synonymous',
'Empirical Nonsynonymous',
'Model Nonsynonymous',
'Species',
'X.axis')
colnames(e_eligens_best_fit) = c(
'Empirical Synonymous',
'Model Synonymous',
'Empirical Nonsynonymous',
'Model Nonsynonymous',
'Species',
'X.axis')
colnames(b_cellulosilyticus_best_fit) = c(
'Empirical Synonymous',
'Model Synonymous',
'Empirical Nonsynonymous',
'Model Nonsynonymous',
'Species',
'X.axis')
p1 = ggplot(melt(o_splanchnicus_best_fit, id=c('Species', 'X.axis')), aes(x=X.axis, y=as.numeric(value), fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
xlab('Minor Allele Frequency') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),                       panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("blue4", "steelblue3", "goldenrod3", "goldenrod1")) +
ggtitle('Odoribacter splanchnicus')
p1
p2 = ggplot(melt(e_eligens_best_fit, id=c('Species', 'X.axis')), aes(x=X.axis, y=as.numeric(value), fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
xlab('Minor Allele Frequency') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),                       panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("blue4", "steelblue3", "goldenrod3", "goldenrod1")) +
ggtitle('Eubacterium eligens')
p2
p3 = ggplot(melt(b_cellulosilyticus_best_fit, id=c('Species', 'X.axis')), aes(x=X.axis, y=as.numeric(value), fill=variable)) +
geom_bar(position='dodge2', stat='identity') +
labs(x = "", fill = "") +
xlab('Minor Allele Frequency') +
ylab('Proportion of Segregating Sites') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),                       panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_fill_manual(values=c("blue4", "steelblue3", "goldenrod3", "goldenrod1")) +
ggtitle('Bacteroides cellulosilyticus')
p3
p1 + p2 + p3 + plot_layout(ncol = 1)
# Phylogenetic Tree in APE
get_species_code_reference = function(code, reference) {
if (code %in% reference$species_id) {
return(reference[reference$species_id == code, ]$midas_number)
} else if(code %in% reference$midas_number) {
return(reference[reference$midas_number == code, ]$species_id)
}
}
# Read the input TSV file
input_table <- read.table("../Data/midas_tree/midas_db_v1.2/species_info.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Extract the midas_number from the species_id column
input_table$midas_number <- sub(".+_(\\d+)$", "\\1", input_table$species_id)
# Create a new data frame with species_id and midas_number columns
output_table <- data.frame(species_id = input_table$species_id, midas_number = input_table$midas_number)
# Save the output as a CSV file
write.csv(output_table, file = "../Data/midas_tree/midas_db_v1.2/species_code_reference.txt", row.names = FALSE)
# Print the output data frame
print(output_table)
# Load the ape package
# library(ape)
# Read the Newick file
input_tree <- read.tree("../Data/midas_tree/midas_db_v1.2/species_tree.newick")
# Specify the tip labels for the subtree you want to extract
species_subtree = c(
'Akkermansia_muciniphila_55290',
'Alistipes_finegoldii_56071',
'Alistipes_onderdonkii_55464',
'Alistipes_putredinis_61533',
'Alistipes_shahii_62199',
'Bacteroidales_bacterium_58650',
'Bacteroides_caccae_53434',
'Bacteroides_cellulosilyticus_58046',
'Bacteroides_fragilis_54507',
'Bacteroides_massiliensis_44749',
'Bacteroides_ovatus_58035',
'Bacteroides_stercoris_56735',
'Bacteroides_thetaiotaomicron_56941',
'Bacteroides_uniformis_57318',
'Bacteroides_vulgatus_57955',
'Bacteroides_xylanisolvens_57185',
'Barnesiella_intestinihominis_62208',
'Coprococcus_sp_62244',
'Dialister_invisus_61905',
'Eubacterium_eligens_61678',
'Eubacterium_rectale_56927',
'Faecalibacterium_prausnitzii_57453',
'Odoribacter_splanchnicus_62174',
'Oscillibacter_sp_60799',
'Parabacteroides_distasonis_56985',
'Parabacteroides_merdae_56972',
'Phascolarctobacterium_sp_59817',
'Prevotella_copri_61740',
'Ruminococcus_bicirculans_59300',
'Ruminococcus_bromii_62047'
)
midas_code_subtree = c()
for (species in species_subtree) {
midas_code_subtree = c(midas_code_subtree, get_species_code_reference(species, output_table))
}
print(midas_code_subtree)
subtree_tips = midas_code_subtree
# Extract the subtree
subtree <- keep.tip(input_tree, subtree_tips)
# Print the extracted subtree
print(subtree)
for (i in 1:length(subtree$tip.label)) {
print(subtree$tip.label[i])
new_tip = get_species_code_reference(subtree$tip.label[i], output_table)
# new_tip = str_sub(new_tip, 1, str_length(new_tip)-6)
subtree$tip.label[i] = new_tip
print(subtree$tip.label[i])
}
plot(subtree)
# Likelihood Surfaces
plot_likelihood_surface('../Analysis/Akkermansia_muciniphila_55290_downsampled_14/likelihood_surface.csv') + ggtitle('A. muciniphila likelihood surface')
plot_likelihood_surface_contour('../Analysis/Akkermansia_muciniphila_55290_downsampled_14/likelihood_surface.csv')
plot_likelihood_surface('../Analysis/Alistipes_finegoldii_56071_downsampled_14/likelihood_surface.csv') + ggtitle('A. finegoldii likelihood surface')
plot_likelihood_surface('../Analysis/Alistipes_onderdonkii_55464_downsampled_14/likelihood_surface.csv') + ggtitle('A. onderdonkii likelihood surface')
# plot_likelihood_surface('../Analysis/Alistipes_putredinis_61533_downsampled_14/likelihood_surface.csv') + ggtitle('A. muciniphila likelihood surface')
plot_likelihood_surface('../Analysis/Alistipes_shahii_62199_downsampled_14/likelihood_surface.csv') + ggtitle('A. shahii likelihood surface')
plot_likelihood_surface('../Analysis/Bacteroidales_bacterium_58650_downsampled_14/likelihood_surface.csv') + ggtitle('B. bacterium likelihood surface')
# plot_likelihood_surface('../Analysis/Bacteroides_caccae_53434_downsampled_14/likelihood_surface.csv') + ggtitle('B. caccae likelihood surface')
plot_likelihood_surface('../Analysis/Bacteroides_cellulosilyticus_58046_downsampled_14/likelihood_surface.csv') + ggtitle('B. cellulosilyticus likelihood surface')
plot_likelihood_surface('../Analysis/Bacteroides_fragilis_54507_downsampled_14/likelihood_surface.csv') + ggtitle('B. fragilis likelihood surface')
# plot_likelihood_surface('../Analysis/Bacteroides_massiliensis_44749_downsampled_14/likelihood_surface.csv') + ggtitle('A. muciniphila likelihood surface')
# plot_likelihood_surface('../Analysis/Bacteroides_ovatus_58035_downsampled_14/likelihood_surface.csv') + ggtitle('A. muciniphila likelihood surface')
plot_likelihood_surface('../Analysis/Bacteroides_stercoris_56735_downsampled_14/likelihood_surface.csv') + ggtitle('B. stercoris likelihood surface')
plot_likelihood_surface('../Analysis/Bacteroides_thetaiotaomicron_56941_downsampled_14/likelihood_surface.csv') + ggtitle('B. thetaiotaomicron likelihood surface')
# plot_likelihood_surface('../Analysis/Bacteroides_uniformis_57318_downsampled_14/likelihood_surface.csv') + ggtitle('A. muciniphila likelihood surface')
plot_likelihood_surface('../Analysis/Bacteroides_vulgatus_57955_downsampled_14/likelihood_surface.csv') + ggtitle('B. vulgatus likelihood surface')
plot_likelihood_surface('../Analysis/Bacteroides_xylanisolvens_57185_downsampled_14/likelihood_surface.csv') + ggtitle('B. xylanisolvens likelihood surface')
plot_likelihood_surface('../Analysis/Barnesiella_intestinihominis_62208_downsampled_14/likelihood_surface.csv') + ggtitle('B. intestinihominis likelihood surface')
# plot_likelihood_surface('../Analysis/Coprococcus_sp_62244_downsampled_14/likelihood_surface.csv') + ggtitle('A. muciniphila likelihood surface')
# plot_likelihood_surface('../Analysis/Dialister_invisus_61905_downsampled_14/likelihood_surface.csv') + ggtitle('A. muciniphila likelihood surface')
plot_likelihood_surface('../Analysis/Eubacterium_eligens_61678_downsampled_14/likelihood_surface.csv') + ggtitle('E. eligens likelihood surface')
plot_likelihood_surface('../Analysis/Eubacterium_rectale_56927_downsampled_14/likelihood_surface.csv') + ggtitle('E. rectale likelihood surface')
plot_likelihood_surface('../Analysis/Faecalibacterium_prausnitzii_57453_downsampled_14/likelihood_surface.csv') + ggtitle('F. prausnitzii likelihood surface')
plot_likelihood_surface('../Analysis/Odoribacter_splanchnicus_62174_downsampled_14/likelihood_surface.csv') + ggtitle('O. splanchnicus likelihood surface')
plot_likelihood_surface('../Analysis/Oscillibacter_sp_60799_downsampled_14/likelihood_surface.csv') + ggtitle('Oscillibacter species likelihood surface')
plot_likelihood_surface('../Analysis/Parabacteroides_distasonis_56985_downsampled_14/likelihood_surface.csv') + ggtitle('P. distasonis likelihood surface')
plot_likelihood_surface('../Analysis/Parabacteroides_merdae_56972_downsampled_14/likelihood_surface.csv') + ggtitle('P. merdae likelihood surface')
plot_likelihood_surface('../Analysis/Phascolarctobacterium_sp_59817_downsampled_14/likelihood_surface.csv') + ggtitle('Phascolarctobacterium species likelihood surface')
plot_likelihood_surface('../Analysis/Prevotella_copri_61740_downsampled_14/likelihood_surface.csv') + ggtitle('P. copri likelihood surface')
plot_likelihood_surface('../Analysis/Ruminococcus_bicirculans_59300_downsampled_14/likelihood_surface.csv') + ggtitle('R. bicirculans likelihood surface')
plot_likelihood_surface('../Analysis/Ruminococcus_bromii_62047_downsampled_14/likelihood_surface.csv') + ggtitle('R. bromii likelihood surface')
